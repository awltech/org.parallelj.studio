<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" packageNamePrefix="org.parallelj.designer"
    sameFileForDiagramAndModel="true"
    diagramFileExtension="pjd"
    domainFileExtension="pjd"
    pluginDirectory="/org.parallelj.designer/src/main/java">
  <diagram
      visualID="1000"
      editPartClassName="SpecificationEditPart"
      itemSemanticEditPolicyClassName="SpecificationItemSemanticEditPolicy"
      canonicalEditPolicyClassName="SpecificationCanonicalEditPolicy"
      iconProviderPriority="Low"
      creationWizardIconPath="icons/obj16/ParallelJDiagramFile.png"
      validationProviderPriority="Low"
      validationEnabled="true"
      validationDecorators="true">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="SpecificationEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Specification"/>
    <childNodes
        visualID="3001"
        editPartClassName="InputConditionEditPart"
        itemSemanticEditPolicyClassName="InputConditionItemSemanticEditPolicy"
        notationViewFactoryClassName="InputConditionViewFactory"
        canonicalEditPolicyClassName="InputConditionCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="InputConditionGraphicalNodeEditPolicy"
        createCommandClassName="InputConditionCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="InputConditionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="InputConditionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InputConditionFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureInputConditionNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InputConditionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(4)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureInputConditionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureInputConditionNameFigure.setText(&quot;&quot;);&#xA;fFigureInputConditionNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureInputConditionNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureInputConditionNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureInputConditionNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureInputConditionNameFigure.horizontalIndent = 0;&#xA;constraintFFigureInputConditionNameFigure.horizontalSpan = 0;&#xA;constraintFFigureInputConditionNameFigure.verticalSpan = 0;&#xA;constraintFFigureInputConditionNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureInputConditionNameFigure.grabExcessVerticalSpace = true;&#xA;this.add(fFigureInputConditionNameFigure, constraintFFigureInputConditionNameFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureInputConditionNameFigure() {&#xA;&#x9;&#x9;return fFigureInputConditionNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/InputCondition"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/inputCondition"/>
      </modelFacet>
      <labels
          visualID="5001"
          editPartClassName="InputConditionNameEditPart"
          itemSemanticEditPolicyClassName="InputConditionNameItemSemanticEditPolicy"
          notationViewFactoryClassName="InputConditionLabelViewFactory"
          readOnly="true"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureInputConditionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3002"
        editPartClassName="OutputConditionEditPart"
        itemSemanticEditPolicyClassName="OutputConditionItemSemanticEditPolicy"
        notationViewFactoryClassName="OutputConditionViewFactory"
        canonicalEditPolicyClassName="OutputConditionCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="OutputConditionGraphicalNodeEditPolicy"
        createCommandClassName="OutputConditionCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="OutputConditionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="OutputConditionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OutputConditionFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureOutputConditionNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OutputConditionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureOutputConditionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureOutputConditionNameFigure.setText(&quot;&quot;);&#xA;fFigureOutputConditionNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureOutputConditionNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureOutputConditionNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureOutputConditionNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureOutputConditionNameFigure.horizontalIndent = 0;&#xA;constraintFFigureOutputConditionNameFigure.horizontalSpan = 0;&#xA;constraintFFigureOutputConditionNameFigure.verticalSpan = 0;&#xA;constraintFFigureOutputConditionNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureOutputConditionNameFigure.grabExcessVerticalSpace = true;&#xA;this.add(fFigureOutputConditionNameFigure, constraintFFigureOutputConditionNameFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureOutputConditionNameFigure() {&#xA;&#x9;&#x9;return fFigureOutputConditionNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/OutputCondition"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/outputCondition"/>
      </modelFacet>
      <labels
          visualID="5002"
          editPartClassName="OutputConditionNameEditPart"
          itemSemanticEditPolicyClassName="OutputConditionNameItemSemanticEditPolicy"
          notationViewFactoryClassName="OutputConditionLabelViewFactory"
          readOnly="true"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureOutputConditionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3003"
        editPartClassName="ConditionEditPart"
        itemSemanticEditPolicyClassName="ConditionItemSemanticEditPolicy"
        notationViewFactoryClassName="ConditionViewFactory"
        canonicalEditPolicyClassName="ConditionCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ConditionGraphicalNodeEditPolicy"
        createCommandClassName="ConditionCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ConditionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ConditionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConditionFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConditionNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConditionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureConditionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureConditionNameFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureConditionNameFigure.setFont(FFIGURECONDITIONNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConditionNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConditionNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConditionNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConditionNameFigure.horizontalIndent = 0;&#xA;constraintFFigureConditionNameFigure.horizontalSpan = 0;&#xA;constraintFFigureConditionNameFigure.verticalSpan = 0;&#xA;constraintFFigureConditionNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConditionNameFigure.grabExcessVerticalSpace = true;&#xA;this.add(fFigureConditionNameFigure, constraintFFigureConditionNameFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConditionNameFigure() {&#xA;&#x9;&#x9;return fFigureConditionNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONDITIONNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Condition"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
      </modelFacet>
      <labels
          visualID="5003"
          editPartClassName="ConditionNameEditPart"
          itemSemanticEditPolicyClassName="ConditionNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ConditionNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConditionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3004"
        editPartClassName="PredicateEditPart"
        itemSemanticEditPolicyClassName="PredicateItemSemanticEditPolicy"
        notationViewFactoryClassName="PredicateViewFactory"
        canonicalEditPolicyClassName="PredicateCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="PredicateGraphicalNodeEditPolicy"
        createCommandClassName="PredicateCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="PredicateEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="PredicateFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class PredicateFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePredicateNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public PredicateFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(190)&#xA;, getMapMode().DPtoLP(35)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigurePredicateNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigurePredicateNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigurePredicateNameFigure.setFont(FFIGUREPREDICATENAMEFIGURE_FONT);&#xA;&#xA;&#xA;fFigurePredicateNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePredicateNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePredicateNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePredicateNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePredicateNameFigure.horizontalIndent = 0;&#xA;constraintFFigurePredicateNameFigure.horizontalSpan = 0;&#xA;constraintFFigurePredicateNameFigure.verticalSpan = 0;&#xA;constraintFFigurePredicateNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigurePredicateNameFigure.grabExcessVerticalSpace = false;&#xA;this.add(fFigurePredicateNameFigure, constraintFFigurePredicateNameFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePredicateNameFigure() {&#xA;&#x9;&#x9;return fFigurePredicateNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPREDICATENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="190"
            height="35"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Predicate"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/predicates"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/predicates"/>
      </modelFacet>
      <labels
          visualID="5004"
          editPartClassName="PredicateNameEditPart"
          itemSemanticEditPolicyClassName="PredicateNameItemSemanticEditPolicy"
          notationViewFactoryClassName="PredicateNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigurePredicateNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3005"
        editPartClassName="ProcedureEditPart"
        itemSemanticEditPolicyClassName="ProcedureItemSemanticEditPolicy"
        notationViewFactoryClassName="ProcedureViewFactory"
        canonicalEditPolicyClassName="ProcedureCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ProcedureGraphicalNodeEditPolicy"
        createCommandClassName="ProcedureCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ProcedureEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ProcedureFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ProcedureFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureJoinFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureSplitFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureExecutableFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureExecutablePrecedingFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureExecutableNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ProcedureFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(265)&#xA;, getMapMode().DPtoLP(43)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureProcedureJoinFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureJoinFigure.setText(&quot;&quot;);&#xA;fFigureProcedureJoinFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureJoinFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureJoinFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureJoinFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureProcedureJoinFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureJoinFigure.horizontalSpan = 1;&#xA;constraintFFigureProcedureJoinFigure.verticalSpan = 1;&#xA;constraintFFigureProcedureJoinFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureProcedureJoinFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureProcedureJoinFigure.widthHint = 43;&#xA;constraintFFigureProcedureJoinFigure.heightHint = 43;&#xA;this.add(fFigureProcedureJoinFigure, constraintFFigureProcedureJoinFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure procedureNameHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;procedureNameHolder0.setFill(false);&#xA;procedureNameHolder0.setOutline(false);&#xA;procedureNameHolder0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintProcedureNameHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintProcedureNameHolder0.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintProcedureNameHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProcedureNameHolder0.horizontalIndent = 0;&#xA;constraintProcedureNameHolder0.horizontalSpan = 1;&#xA;constraintProcedureNameHolder0.verticalSpan = 1;&#xA;constraintProcedureNameHolder0.grabExcessHorizontalSpace = true;&#xA;constraintProcedureNameHolder0.grabExcessVerticalSpace = false;&#xA;this.add(procedureNameHolder0, constraintProcedureNameHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutProcedureNameHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutProcedureNameHolder0.numColumns = 1;&#xA;&#x9;layoutProcedureNameHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutProcedureNameHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutProcedureNameHolder0.verticalSpacing = 0;&#xA;&#x9;layoutProcedureNameHolder0.marginWidth = 0;&#xA;&#x9;layoutProcedureNameHolder0.marginHeight = 0;&#xA;&#x9;procedureNameHolder0.setLayoutManager(layoutProcedureNameHolder0);&#xA;&#xA;&#xA;&#xA;fFigureProcedureNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureProcedureNameFigure.setFont(FFIGUREPROCEDURENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureNameFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureNameFigure.horizontalSpan = 0;&#xA;constraintFFigureProcedureNameFigure.verticalSpan = 0;&#xA;constraintFFigureProcedureNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProcedureNameFigure.grabExcessVerticalSpace = false;&#xA;procedureNameHolder0.add(fFigureProcedureNameFigure, constraintFFigureProcedureNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure procedureExecutableHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;procedureExecutableHolder1.setFill(false);&#xA;procedureExecutableHolder1.setOutline(false);&#xA;procedureExecutableHolder1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintProcedureExecutableHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintProcedureExecutableHolder1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProcedureExecutableHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProcedureExecutableHolder1.horizontalIndent = 0;&#xA;constraintProcedureExecutableHolder1.horizontalSpan = 0;&#xA;constraintProcedureExecutableHolder1.verticalSpan = 0;&#xA;constraintProcedureExecutableHolder1.grabExcessHorizontalSpace = true;&#xA;constraintProcedureExecutableHolder1.grabExcessVerticalSpace = false;&#xA;procedureNameHolder0.add(procedureExecutableHolder1, constraintProcedureExecutableHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutProcedureExecutableHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutProcedureExecutableHolder1.numColumns = 3;&#xA;&#x9;layoutProcedureExecutableHolder1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutProcedureExecutableHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutProcedureExecutableHolder1.verticalSpacing = 0;&#xA;&#x9;layoutProcedureExecutableHolder1.marginWidth = 0;&#xA;&#x9;layoutProcedureExecutableHolder1.marginHeight = 0;&#xA;&#x9;procedureExecutableHolder1.setLayoutManager(layoutProcedureExecutableHolder1);&#xA;&#xA;&#xA;&#xA;fFigureProcedureExecutablePrecedingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureExecutablePrecedingFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureProcedureExecutablePrecedingFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureProcedureExecutablePrecedingFigure.setFont(FFIGUREPROCEDUREEXECUTABLEPRECEDINGFIGURE_FONT);&#xA;&#xA;&#xA;fFigureProcedureExecutablePrecedingFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureExecutablePrecedingFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureExecutablePrecedingFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.horizontalSpan = 0;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.verticalSpan = 0;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.widthHint = 20;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.heightHint = 15;&#xA;procedureExecutableHolder1.add(fFigureProcedureExecutablePrecedingFigure, constraintFFigureProcedureExecutablePrecedingFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureProcedureExecutableFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureExecutableFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureProcedureExecutableFigure.setFont(FFIGUREPROCEDUREEXECUTABLEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureProcedureExecutableFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureExecutableFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureExecutableFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutableFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutableFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureExecutableFigure.horizontalSpan = 0;&#xA;constraintFFigureProcedureExecutableFigure.verticalSpan = 0;&#xA;constraintFFigureProcedureExecutableFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProcedureExecutableFigure.grabExcessVerticalSpace = false;&#xA;procedureExecutableHolder1.add(fFigureProcedureExecutableFigure, constraintFFigureProcedureExecutableFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureProcedureExecutableNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureExecutableNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureProcedureExecutableNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureProcedureExecutableNameFigure.setFont(FFIGUREPROCEDUREEXECUTABLENAMEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureProcedureExecutableNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureExecutableNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureExecutableNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutableNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutableNameFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureExecutableNameFigure.horizontalSpan = 0;&#xA;constraintFFigureProcedureExecutableNameFigure.verticalSpan = 0;&#xA;constraintFFigureProcedureExecutableNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProcedureExecutableNameFigure.grabExcessVerticalSpace = false;&#xA;procedureExecutableHolder1.add(fFigureProcedureExecutableNameFigure, constraintFFigureProcedureExecutableNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureProcedureSplitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureSplitFigure.setText(&quot;&quot;);&#xA;fFigureProcedureSplitFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureSplitFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureSplitFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureSplitFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureProcedureSplitFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureSplitFigure.horizontalSpan = 1;&#xA;constraintFFigureProcedureSplitFigure.verticalSpan = 1;&#xA;constraintFFigureProcedureSplitFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureProcedureSplitFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureProcedureSplitFigure.widthHint = 43;&#xA;constraintFFigureProcedureSplitFigure.heightHint = 43;&#xA;this.add(fFigureProcedureSplitFigure, constraintFFigureProcedureSplitFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureNameFigure() {&#xA;&#x9;&#x9;return fFigureProcedureNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureJoinFigure() {&#xA;&#x9;&#x9;return fFigureProcedureJoinFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureSplitFigure() {&#xA;&#x9;&#x9;return fFigureProcedureSplitFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureExecutableFigure() {&#xA;&#x9;&#x9;return fFigureProcedureExecutableFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureExecutablePrecedingFigure() {&#xA;&#x9;&#x9;return fFigureProcedureExecutablePrecedingFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureExecutableNameFigure() {&#xA;&#x9;&#x9;return fFigureProcedureExecutableNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROCEDURENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROCEDUREEXECUTABLEPRECEDINGFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROCEDUREEXECUTABLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROCEDUREEXECUTABLENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="265"
            height="43"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.0">
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Procedure"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
      </modelFacet>
      <labels
          visualID="5005"
          editPartClassName="ProcedureNameEditPart"
          itemSemanticEditPolicyClassName="ProcedureNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ProcedureNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureProcedureNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5006"
          editPartClassName="ProcedureExecutableEditPart"
          itemSemanticEditPolicyClassName="ProcedureExecutableItemSemanticEditPolicy"
          notationViewFactoryClassName="ProcedureExecutableViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureProcedureExecutableFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Procedure/executable"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3006"
        editPartClassName="ForEachLoopEditPart"
        itemSemanticEditPolicyClassName="ForEachLoopItemSemanticEditPolicy"
        notationViewFactoryClassName="ForEachLoopViewFactory"
        canonicalEditPolicyClassName="ForEachLoopCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ForEachLoopGraphicalNodeEditPolicy"
        createCommandClassName="ForEachLoopCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ForEachLoopEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ForEachLoopFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ForEachLoopFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureForEachLoopNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureForEachLoopJoinFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureForEachLoopSplitFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureForEachLoopExecutableFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureForEachLoopExecutableNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureForEachLoopIterableFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureForEachLoopExecutablePrecedingFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureForEachLoopIterablePrecedingFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ForEachLoopFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(265)&#xA;, getMapMode().DPtoLP(55)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureForEachLoopJoinFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureForEachLoopJoinFigure.setText(&quot;&lt;...>&quot;);&#xA;fFigureForEachLoopJoinFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureForEachLoopJoinFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureForEachLoopJoinFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopJoinFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureForEachLoopJoinFigure.horizontalIndent = 0;&#xA;constraintFFigureForEachLoopJoinFigure.horizontalSpan = 1;&#xA;constraintFFigureForEachLoopJoinFigure.verticalSpan = 1;&#xA;constraintFFigureForEachLoopJoinFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureForEachLoopJoinFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureForEachLoopJoinFigure.widthHint = 43;&#xA;constraintFFigureForEachLoopJoinFigure.heightHint = 55;&#xA;this.add(fFigureForEachLoopJoinFigure, constraintFFigureForEachLoopJoinFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure forLoopNameHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;forLoopNameHolder0.setFill(false);&#xA;forLoopNameHolder0.setOutline(false);&#xA;forLoopNameHolder0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintForLoopNameHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintForLoopNameHolder0.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintForLoopNameHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintForLoopNameHolder0.horizontalIndent = 0;&#xA;constraintForLoopNameHolder0.horizontalSpan = 1;&#xA;constraintForLoopNameHolder0.verticalSpan = 1;&#xA;constraintForLoopNameHolder0.grabExcessHorizontalSpace = true;&#xA;constraintForLoopNameHolder0.grabExcessVerticalSpace = false;&#xA;this.add(forLoopNameHolder0, constraintForLoopNameHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutForLoopNameHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutForLoopNameHolder0.numColumns = 1;&#xA;&#x9;layoutForLoopNameHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutForLoopNameHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutForLoopNameHolder0.verticalSpacing = 0;&#xA;&#x9;layoutForLoopNameHolder0.marginWidth = 0;&#xA;&#x9;layoutForLoopNameHolder0.marginHeight = 0;&#xA;&#x9;forLoopNameHolder0.setLayoutManager(layoutForLoopNameHolder0);&#xA;&#xA;&#xA;&#xA;fFigureForEachLoopNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureForEachLoopNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureForEachLoopNameFigure.setFont(FFIGUREFOREACHLOOPNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureForEachLoopNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureForEachLoopNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopNameFigure.horizontalIndent = 0;&#xA;constraintFFigureForEachLoopNameFigure.horizontalSpan = 0;&#xA;constraintFFigureForEachLoopNameFigure.verticalSpan = 0;&#xA;constraintFFigureForEachLoopNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureForEachLoopNameFigure.grabExcessVerticalSpace = false;&#xA;forLoopNameHolder0.add(fFigureForEachLoopNameFigure, constraintFFigureForEachLoopNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure forEachLoopExecutableHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;forEachLoopExecutableHolder1.setFill(false);&#xA;forEachLoopExecutableHolder1.setOutline(false);&#xA;forEachLoopExecutableHolder1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintForEachLoopExecutableHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintForEachLoopExecutableHolder1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintForEachLoopExecutableHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintForEachLoopExecutableHolder1.horizontalIndent = 0;&#xA;constraintForEachLoopExecutableHolder1.horizontalSpan = 0;&#xA;constraintForEachLoopExecutableHolder1.verticalSpan = 0;&#xA;constraintForEachLoopExecutableHolder1.grabExcessHorizontalSpace = true;&#xA;constraintForEachLoopExecutableHolder1.grabExcessVerticalSpace = false;&#xA;forLoopNameHolder0.add(forEachLoopExecutableHolder1, constraintForEachLoopExecutableHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutForEachLoopExecutableHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutForEachLoopExecutableHolder1.numColumns = 3;&#xA;&#x9;layoutForEachLoopExecutableHolder1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutForEachLoopExecutableHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutForEachLoopExecutableHolder1.verticalSpacing = 0;&#xA;&#x9;layoutForEachLoopExecutableHolder1.marginWidth = 0;&#xA;&#x9;layoutForEachLoopExecutableHolder1.marginHeight = 0;&#xA;&#x9;forEachLoopExecutableHolder1.setLayoutManager(layoutForEachLoopExecutableHolder1);&#xA;&#xA;&#xA;&#xA;fFigureForEachLoopExecutablePrecedingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureForEachLoopExecutablePrecedingFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureForEachLoopExecutablePrecedingFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureForEachLoopExecutablePrecedingFigure.setFont(FFIGUREFOREACHLOOPEXECUTABLEPRECEDINGFIGURE_FONT);&#xA;&#xA;&#xA;fFigureForEachLoopExecutablePrecedingFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureForEachLoopExecutablePrecedingFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.horizontalIndent = 0;&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.horizontalSpan = 0;&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.verticalSpan = 0;&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.widthHint = 20;&#xA;constraintFFigureForEachLoopExecutablePrecedingFigure.heightHint = 15;&#xA;forEachLoopExecutableHolder1.add(fFigureForEachLoopExecutablePrecedingFigure, constraintFFigureForEachLoopExecutablePrecedingFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureForEachLoopExecutableFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureForEachLoopExecutableFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureForEachLoopExecutableFigure.setFont(FFIGUREFOREACHLOOPEXECUTABLEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureForEachLoopExecutableFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureForEachLoopExecutableFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureForEachLoopExecutableFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopExecutableFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopExecutableFigure.horizontalIndent = 0;&#xA;constraintFFigureForEachLoopExecutableFigure.horizontalSpan = 0;&#xA;constraintFFigureForEachLoopExecutableFigure.verticalSpan = 0;&#xA;constraintFFigureForEachLoopExecutableFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureForEachLoopExecutableFigure.grabExcessVerticalSpace = false;&#xA;forEachLoopExecutableHolder1.add(fFigureForEachLoopExecutableFigure, constraintFFigureForEachLoopExecutableFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureForEachLoopExecutableNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureForEachLoopExecutableNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureForEachLoopExecutableNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureForEachLoopExecutableNameFigure.setFont(FFIGUREFOREACHLOOPEXECUTABLENAMEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureForEachLoopExecutableNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureForEachLoopExecutableNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureForEachLoopExecutableNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopExecutableNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopExecutableNameFigure.horizontalIndent = 0;&#xA;constraintFFigureForEachLoopExecutableNameFigure.horizontalSpan = 0;&#xA;constraintFFigureForEachLoopExecutableNameFigure.verticalSpan = 0;&#xA;constraintFFigureForEachLoopExecutableNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureForEachLoopExecutableNameFigure.grabExcessVerticalSpace = false;&#xA;forEachLoopExecutableHolder1.add(fFigureForEachLoopExecutableNameFigure, constraintFFigureForEachLoopExecutableNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure forEachLoopIterableHolderFigure1 = new org.eclipse.draw2d.RectangleFigure();&#xA;forEachLoopIterableHolderFigure1.setFill(false);&#xA;forEachLoopIterableHolderFigure1.setOutline(false);&#xA;forEachLoopIterableHolderFigure1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintForEachLoopIterableHolderFigure1 = new org.eclipse.draw2d.GridData();&#xA;constraintForEachLoopIterableHolderFigure1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintForEachLoopIterableHolderFigure1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintForEachLoopIterableHolderFigure1.horizontalIndent = 0;&#xA;constraintForEachLoopIterableHolderFigure1.horizontalSpan = 0;&#xA;constraintForEachLoopIterableHolderFigure1.verticalSpan = 0;&#xA;constraintForEachLoopIterableHolderFigure1.grabExcessHorizontalSpace = true;&#xA;constraintForEachLoopIterableHolderFigure1.grabExcessVerticalSpace = false;&#xA;forLoopNameHolder0.add(forEachLoopIterableHolderFigure1, constraintForEachLoopIterableHolderFigure1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutForEachLoopIterableHolderFigure1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutForEachLoopIterableHolderFigure1.numColumns = 2;&#xA;&#x9;layoutForEachLoopIterableHolderFigure1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutForEachLoopIterableHolderFigure1.horizontalSpacing = 0;&#xA;&#x9;layoutForEachLoopIterableHolderFigure1.verticalSpacing = 0;&#xA;&#x9;layoutForEachLoopIterableHolderFigure1.marginWidth = 0;&#xA;&#x9;layoutForEachLoopIterableHolderFigure1.marginHeight = 0;&#xA;&#x9;forEachLoopIterableHolderFigure1.setLayoutManager(layoutForEachLoopIterableHolderFigure1);&#xA;&#xA;&#xA;&#xA;fFigureForEachLoopIterablePrecedingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureForEachLoopIterablePrecedingFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureForEachLoopIterablePrecedingFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureForEachLoopIterablePrecedingFigure.setFont(FFIGUREFOREACHLOOPITERABLEPRECEDINGFIGURE_FONT);&#xA;&#xA;&#xA;fFigureForEachLoopIterablePrecedingFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureForEachLoopIterablePrecedingFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.horizontalIndent = 0;&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.horizontalSpan = 0;&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.verticalSpan = 0;&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.widthHint = 21;&#xA;constraintFFigureForEachLoopIterablePrecedingFigure.heightHint = 15;&#xA;forEachLoopIterableHolderFigure1.add(fFigureForEachLoopIterablePrecedingFigure, constraintFFigureForEachLoopIterablePrecedingFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureForEachLoopIterableFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureForEachLoopIterableFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureForEachLoopIterableFigure.setFont(FFIGUREFOREACHLOOPITERABLEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureForEachLoopIterableFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureForEachLoopIterableFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureForEachLoopIterableFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopIterableFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopIterableFigure.horizontalIndent = 0;&#xA;constraintFFigureForEachLoopIterableFigure.horizontalSpan = 0;&#xA;constraintFFigureForEachLoopIterableFigure.verticalSpan = 0;&#xA;constraintFFigureForEachLoopIterableFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureForEachLoopIterableFigure.grabExcessVerticalSpace = false;&#xA;forEachLoopIterableHolderFigure1.add(fFigureForEachLoopIterableFigure, constraintFFigureForEachLoopIterableFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureForEachLoopSplitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureForEachLoopSplitFigure.setText(&quot;&lt;...>&quot;);&#xA;fFigureForEachLoopSplitFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureForEachLoopSplitFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureForEachLoopSplitFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureForEachLoopSplitFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureForEachLoopSplitFigure.horizontalIndent = 0;&#xA;constraintFFigureForEachLoopSplitFigure.horizontalSpan = 1;&#xA;constraintFFigureForEachLoopSplitFigure.verticalSpan = 1;&#xA;constraintFFigureForEachLoopSplitFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureForEachLoopSplitFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureForEachLoopSplitFigure.widthHint = 43;&#xA;constraintFFigureForEachLoopSplitFigure.heightHint = 55;&#xA;this.add(fFigureForEachLoopSplitFigure, constraintFFigureForEachLoopSplitFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureForEachLoopNameFigure() {&#xA;&#x9;&#x9;return fFigureForEachLoopNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureForEachLoopJoinFigure() {&#xA;&#x9;&#x9;return fFigureForEachLoopJoinFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureForEachLoopSplitFigure() {&#xA;&#x9;&#x9;return fFigureForEachLoopSplitFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureForEachLoopExecutableFigure() {&#xA;&#x9;&#x9;return fFigureForEachLoopExecutableFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureForEachLoopExecutableNameFigure() {&#xA;&#x9;&#x9;return fFigureForEachLoopExecutableNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureForEachLoopIterableFigure() {&#xA;&#x9;&#x9;return fFigureForEachLoopIterableFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureForEachLoopExecutablePrecedingFigure() {&#xA;&#x9;&#x9;return fFigureForEachLoopExecutablePrecedingFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureForEachLoopIterablePrecedingFigure() {&#xA;&#x9;&#x9;return fFigureForEachLoopIterablePrecedingFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREFOREACHLOOPNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREFOREACHLOOPEXECUTABLEPRECEDINGFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREFOREACHLOOPEXECUTABLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREFOREACHLOOPEXECUTABLENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREFOREACHLOOPITERABLEPRECEDINGFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREFOREACHLOOPITERABLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="265"
            height="55"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/ForEachLoop"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
      </modelFacet>
      <labels
          visualID="5007"
          editPartClassName="ForEachLoopNameEditPart"
          itemSemanticEditPolicyClassName="ForEachLoopNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ForEachLoopNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureForEachLoopNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5008"
          editPartClassName="ForEachLoopExecutableEditPart"
          itemSemanticEditPolicyClassName="ForEachLoopExecutableItemSemanticEditPolicy"
          notationViewFactoryClassName="ForEachLoopExecutableViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureForEachLoopExecutableFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Procedure/executable"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5009"
          editPartClassName="ForEachLoopIterableEditPart"
          itemSemanticEditPolicyClassName="ForEachLoopIterableItemSemanticEditPolicy"
          notationViewFactoryClassName="ForEachLoopLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureForEachLoopIterableFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3007"
        editPartClassName="WhileLoopEditPart"
        itemSemanticEditPolicyClassName="WhileLoopItemSemanticEditPolicy"
        notationViewFactoryClassName="WhileLoopViewFactory"
        canonicalEditPolicyClassName="WhileLoopCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="WhileLoopGraphicalNodeEditPolicy"
        createCommandClassName="WhileLoopCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="WhileLoopEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="WhileLoopFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class WhileLoopFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWhileLoopNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWhileLoopJoinFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWhileLoopSplitFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWhileLoopExecutableFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWhileLoopExecutableNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWhileLoopPredicateFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWhileLoopExecutablePrecedingFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWhileLoopPredicatePrecedingFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public WhileLoopFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(265)&#xA;, getMapMode().DPtoLP(55)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureWhileLoopJoinFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWhileLoopJoinFigure.setText(&quot;&lt;...>&quot;);&#xA;fFigureWhileLoopJoinFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureWhileLoopJoinFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureWhileLoopJoinFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopJoinFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureWhileLoopJoinFigure.horizontalIndent = 0;&#xA;constraintFFigureWhileLoopJoinFigure.horizontalSpan = 1;&#xA;constraintFFigureWhileLoopJoinFigure.verticalSpan = 1;&#xA;constraintFFigureWhileLoopJoinFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureWhileLoopJoinFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureWhileLoopJoinFigure.widthHint = 43;&#xA;constraintFFigureWhileLoopJoinFigure.heightHint = 55;&#xA;this.add(fFigureWhileLoopJoinFigure, constraintFFigureWhileLoopJoinFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure whileLoopNameHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;whileLoopNameHolder0.setFill(false);&#xA;whileLoopNameHolder0.setOutline(false);&#xA;whileLoopNameHolder0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintWhileLoopNameHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintWhileLoopNameHolder0.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintWhileLoopNameHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintWhileLoopNameHolder0.horizontalIndent = 0;&#xA;constraintWhileLoopNameHolder0.horizontalSpan = 1;&#xA;constraintWhileLoopNameHolder0.verticalSpan = 1;&#xA;constraintWhileLoopNameHolder0.grabExcessHorizontalSpace = true;&#xA;constraintWhileLoopNameHolder0.grabExcessVerticalSpace = false;&#xA;this.add(whileLoopNameHolder0, constraintWhileLoopNameHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutWhileLoopNameHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutWhileLoopNameHolder0.numColumns = 1;&#xA;&#x9;layoutWhileLoopNameHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutWhileLoopNameHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutWhileLoopNameHolder0.verticalSpacing = 0;&#xA;&#x9;layoutWhileLoopNameHolder0.marginWidth = 0;&#xA;&#x9;layoutWhileLoopNameHolder0.marginHeight = 0;&#xA;&#x9;whileLoopNameHolder0.setLayoutManager(layoutWhileLoopNameHolder0);&#xA;&#xA;&#xA;&#xA;fFigureWhileLoopNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWhileLoopNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureWhileLoopNameFigure.setFont(FFIGUREWHILELOOPNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureWhileLoopNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureWhileLoopNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopNameFigure.horizontalIndent = 0;&#xA;constraintFFigureWhileLoopNameFigure.horizontalSpan = 0;&#xA;constraintFFigureWhileLoopNameFigure.verticalSpan = 0;&#xA;constraintFFigureWhileLoopNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureWhileLoopNameFigure.grabExcessVerticalSpace = false;&#xA;whileLoopNameHolder0.add(fFigureWhileLoopNameFigure, constraintFFigureWhileLoopNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure whileLoopExecutableHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;whileLoopExecutableHolder1.setFill(false);&#xA;whileLoopExecutableHolder1.setOutline(false);&#xA;whileLoopExecutableHolder1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintWhileLoopExecutableHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintWhileLoopExecutableHolder1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintWhileLoopExecutableHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintWhileLoopExecutableHolder1.horizontalIndent = 0;&#xA;constraintWhileLoopExecutableHolder1.horizontalSpan = 0;&#xA;constraintWhileLoopExecutableHolder1.verticalSpan = 0;&#xA;constraintWhileLoopExecutableHolder1.grabExcessHorizontalSpace = true;&#xA;constraintWhileLoopExecutableHolder1.grabExcessVerticalSpace = false;&#xA;whileLoopNameHolder0.add(whileLoopExecutableHolder1, constraintWhileLoopExecutableHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutWhileLoopExecutableHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutWhileLoopExecutableHolder1.numColumns = 3;&#xA;&#x9;layoutWhileLoopExecutableHolder1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutWhileLoopExecutableHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutWhileLoopExecutableHolder1.verticalSpacing = 0;&#xA;&#x9;layoutWhileLoopExecutableHolder1.marginWidth = 0;&#xA;&#x9;layoutWhileLoopExecutableHolder1.marginHeight = 0;&#xA;&#x9;whileLoopExecutableHolder1.setLayoutManager(layoutWhileLoopExecutableHolder1);&#xA;&#xA;&#xA;&#xA;fFigureWhileLoopExecutablePrecedingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWhileLoopExecutablePrecedingFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureWhileLoopExecutablePrecedingFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureWhileLoopExecutablePrecedingFigure.setFont(FFIGUREWHILELOOPEXECUTABLEPRECEDINGFIGURE_FONT);&#xA;&#xA;&#xA;fFigureWhileLoopExecutablePrecedingFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureWhileLoopExecutablePrecedingFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.horizontalIndent = 0;&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.horizontalSpan = 0;&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.verticalSpan = 0;&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.widthHint = 20;&#xA;constraintFFigureWhileLoopExecutablePrecedingFigure.heightHint = 15;&#xA;whileLoopExecutableHolder1.add(fFigureWhileLoopExecutablePrecedingFigure, constraintFFigureWhileLoopExecutablePrecedingFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureWhileLoopExecutableFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWhileLoopExecutableFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureWhileLoopExecutableFigure.setFont(FFIGUREWHILELOOPEXECUTABLEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureWhileLoopExecutableFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureWhileLoopExecutableFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureWhileLoopExecutableFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopExecutableFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopExecutableFigure.horizontalIndent = 0;&#xA;constraintFFigureWhileLoopExecutableFigure.horizontalSpan = 0;&#xA;constraintFFigureWhileLoopExecutableFigure.verticalSpan = 0;&#xA;constraintFFigureWhileLoopExecutableFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureWhileLoopExecutableFigure.grabExcessVerticalSpace = false;&#xA;whileLoopExecutableHolder1.add(fFigureWhileLoopExecutableFigure, constraintFFigureWhileLoopExecutableFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureWhileLoopExecutableNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWhileLoopExecutableNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureWhileLoopExecutableNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureWhileLoopExecutableNameFigure.setFont(FFIGUREWHILELOOPEXECUTABLENAMEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureWhileLoopExecutableNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureWhileLoopExecutableNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureWhileLoopExecutableNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopExecutableNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopExecutableNameFigure.horizontalIndent = 0;&#xA;constraintFFigureWhileLoopExecutableNameFigure.horizontalSpan = 0;&#xA;constraintFFigureWhileLoopExecutableNameFigure.verticalSpan = 0;&#xA;constraintFFigureWhileLoopExecutableNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureWhileLoopExecutableNameFigure.grabExcessVerticalSpace = false;&#xA;whileLoopExecutableHolder1.add(fFigureWhileLoopExecutableNameFigure, constraintFFigureWhileLoopExecutableNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure whileLoopPredicateHolderFigure1 = new org.eclipse.draw2d.RectangleFigure();&#xA;whileLoopPredicateHolderFigure1.setFill(false);&#xA;whileLoopPredicateHolderFigure1.setOutline(false);&#xA;whileLoopPredicateHolderFigure1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintWhileLoopPredicateHolderFigure1 = new org.eclipse.draw2d.GridData();&#xA;constraintWhileLoopPredicateHolderFigure1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintWhileLoopPredicateHolderFigure1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintWhileLoopPredicateHolderFigure1.horizontalIndent = 0;&#xA;constraintWhileLoopPredicateHolderFigure1.horizontalSpan = 0;&#xA;constraintWhileLoopPredicateHolderFigure1.verticalSpan = 0;&#xA;constraintWhileLoopPredicateHolderFigure1.grabExcessHorizontalSpace = true;&#xA;constraintWhileLoopPredicateHolderFigure1.grabExcessVerticalSpace = false;&#xA;whileLoopNameHolder0.add(whileLoopPredicateHolderFigure1, constraintWhileLoopPredicateHolderFigure1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutWhileLoopPredicateHolderFigure1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutWhileLoopPredicateHolderFigure1.numColumns = 2;&#xA;&#x9;layoutWhileLoopPredicateHolderFigure1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutWhileLoopPredicateHolderFigure1.horizontalSpacing = 0;&#xA;&#x9;layoutWhileLoopPredicateHolderFigure1.verticalSpacing = 0;&#xA;&#x9;layoutWhileLoopPredicateHolderFigure1.marginWidth = 0;&#xA;&#x9;layoutWhileLoopPredicateHolderFigure1.marginHeight = 0;&#xA;&#x9;whileLoopPredicateHolderFigure1.setLayoutManager(layoutWhileLoopPredicateHolderFigure1);&#xA;&#xA;&#xA;&#xA;fFigureWhileLoopPredicatePrecedingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWhileLoopPredicatePrecedingFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureWhileLoopPredicatePrecedingFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureWhileLoopPredicatePrecedingFigure.setFont(FFIGUREWHILELOOPPREDICATEPRECEDINGFIGURE_FONT);&#xA;&#xA;&#xA;fFigureWhileLoopPredicatePrecedingFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureWhileLoopPredicatePrecedingFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.horizontalIndent = 0;&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.horizontalSpan = 0;&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.verticalSpan = 0;&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.widthHint = 35;&#xA;constraintFFigureWhileLoopPredicatePrecedingFigure.heightHint = 15;&#xA;whileLoopPredicateHolderFigure1.add(fFigureWhileLoopPredicatePrecedingFigure, constraintFFigureWhileLoopPredicatePrecedingFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureWhileLoopPredicateFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWhileLoopPredicateFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureWhileLoopPredicateFigure.setFont(FFIGUREWHILELOOPPREDICATEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureWhileLoopPredicateFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureWhileLoopPredicateFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureWhileLoopPredicateFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopPredicateFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopPredicateFigure.horizontalIndent = 0;&#xA;constraintFFigureWhileLoopPredicateFigure.horizontalSpan = 0;&#xA;constraintFFigureWhileLoopPredicateFigure.verticalSpan = 0;&#xA;constraintFFigureWhileLoopPredicateFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureWhileLoopPredicateFigure.grabExcessVerticalSpace = false;&#xA;whileLoopPredicateHolderFigure1.add(fFigureWhileLoopPredicateFigure, constraintFFigureWhileLoopPredicateFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureWhileLoopSplitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWhileLoopSplitFigure.setText(&quot;&lt;...>&quot;);&#xA;fFigureWhileLoopSplitFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureWhileLoopSplitFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureWhileLoopSplitFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureWhileLoopSplitFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureWhileLoopSplitFigure.horizontalIndent = 0;&#xA;constraintFFigureWhileLoopSplitFigure.horizontalSpan = 1;&#xA;constraintFFigureWhileLoopSplitFigure.verticalSpan = 1;&#xA;constraintFFigureWhileLoopSplitFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureWhileLoopSplitFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureWhileLoopSplitFigure.widthHint = 43;&#xA;constraintFFigureWhileLoopSplitFigure.heightHint = 55;&#xA;this.add(fFigureWhileLoopSplitFigure, constraintFFigureWhileLoopSplitFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWhileLoopNameFigure() {&#xA;&#x9;&#x9;return fFigureWhileLoopNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWhileLoopJoinFigure() {&#xA;&#x9;&#x9;return fFigureWhileLoopJoinFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWhileLoopSplitFigure() {&#xA;&#x9;&#x9;return fFigureWhileLoopSplitFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWhileLoopExecutableFigure() {&#xA;&#x9;&#x9;return fFigureWhileLoopExecutableFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWhileLoopExecutableNameFigure() {&#xA;&#x9;&#x9;return fFigureWhileLoopExecutableNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWhileLoopPredicateFigure() {&#xA;&#x9;&#x9;return fFigureWhileLoopPredicateFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWhileLoopExecutablePrecedingFigure() {&#xA;&#x9;&#x9;return fFigureWhileLoopExecutablePrecedingFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWhileLoopPredicatePrecedingFigure() {&#xA;&#x9;&#x9;return fFigureWhileLoopPredicatePrecedingFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREWHILELOOPNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREWHILELOOPEXECUTABLEPRECEDINGFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREWHILELOOPEXECUTABLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREWHILELOOPEXECUTABLENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREWHILELOOPPREDICATEPRECEDINGFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREWHILELOOPPREDICATEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="265"
            height="55"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/WhileLoop"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
      </modelFacet>
      <labels
          visualID="5010"
          editPartClassName="WhileLoopNameEditPart"
          itemSemanticEditPolicyClassName="WhileLoopNameItemSemanticEditPolicy"
          notationViewFactoryClassName="WhileLoopNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureWhileLoopNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5011"
          editPartClassName="WhileLoopExecutableEditPart"
          itemSemanticEditPolicyClassName="WhileLoopExecutableItemSemanticEditPolicy"
          notationViewFactoryClassName="WhileLoopExecutableViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureWhileLoopExecutableFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Procedure/executable"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5012"
          editPartClassName="WhileLoopPredicateEditPart"
          itemSemanticEditPolicyClassName="WhileLoopPredicateItemSemanticEditPolicy"
          notationViewFactoryClassName="WhileLoopLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureWhileLoopPredicateFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3008"
        editPartClassName="HandlerEditPart"
        itemSemanticEditPolicyClassName="HandlerItemSemanticEditPolicy"
        notationViewFactoryClassName="HandlerViewFactory"
        canonicalEditPolicyClassName="HandlerCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="HandlerGraphicalNodeEditPolicy"
        createCommandClassName="HandlerCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="HandlerEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="HandlerFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class HandlerFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureHandlerNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureHandlerSplitFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public HandlerFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 2;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(265)&#xA;, getMapMode().DPtoLP(35)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure handlerNameHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;handlerNameHolder0.setFill(false);&#xA;handlerNameHolder0.setOutline(false);&#xA;handlerNameHolder0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(51)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintHandlerNameHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintHandlerNameHolder0.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintHandlerNameHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintHandlerNameHolder0.horizontalIndent = 0;&#xA;constraintHandlerNameHolder0.horizontalSpan = 1;&#xA;constraintHandlerNameHolder0.verticalSpan = 1;&#xA;constraintHandlerNameHolder0.grabExcessHorizontalSpace = true;&#xA;constraintHandlerNameHolder0.grabExcessVerticalSpace = false;&#xA;this.add(handlerNameHolder0, constraintHandlerNameHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutHandlerNameHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutHandlerNameHolder0.numColumns = 1;&#xA;&#x9;layoutHandlerNameHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutHandlerNameHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutHandlerNameHolder0.verticalSpacing = 0;&#xA;&#x9;layoutHandlerNameHolder0.marginWidth = 0;&#xA;&#x9;layoutHandlerNameHolder0.marginHeight = 0;&#xA;&#x9;handlerNameHolder0.setLayoutManager(layoutHandlerNameHolder0);&#xA;&#xA;&#xA;&#xA;fFigureHandlerNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureHandlerNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureHandlerNameFigure.setFont(FFIGUREHANDLERNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureHandlerNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureHandlerNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureHandlerNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureHandlerNameFigure.horizontalIndent = 0;&#xA;constraintFFigureHandlerNameFigure.horizontalSpan = 0;&#xA;constraintFFigureHandlerNameFigure.verticalSpan = 0;&#xA;constraintFFigureHandlerNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureHandlerNameFigure.grabExcessVerticalSpace = false;&#xA;handlerNameHolder0.add(fFigureHandlerNameFigure, constraintFFigureHandlerNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureHandlerSplitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureHandlerSplitFigure.setText(&quot;&lt;...>&quot;);&#xA;fFigureHandlerSplitFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureHandlerSplitFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureHandlerSplitFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureHandlerSplitFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureHandlerSplitFigure.horizontalIndent = 0;&#xA;constraintFFigureHandlerSplitFigure.horizontalSpan = 1;&#xA;constraintFFigureHandlerSplitFigure.verticalSpan = 1;&#xA;constraintFFigureHandlerSplitFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureHandlerSplitFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureHandlerSplitFigure.widthHint = 43;&#xA;constraintFFigureHandlerSplitFigure.heightHint = 33;&#xA;this.add(fFigureHandlerSplitFigure, constraintFFigureHandlerSplitFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureHandlerNameFigure() {&#xA;&#x9;&#x9;return fFigureHandlerNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureHandlerSplitFigure() {&#xA;&#x9;&#x9;return fFigureHandlerSplitFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREHANDLERNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="265"
            height="35"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Handler"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
      </modelFacet>
      <labels
          visualID="5013"
          editPartClassName="HandlerNameEditPart"
          itemSemanticEditPolicyClassName="HandlerNameItemSemanticEditPolicy"
          notationViewFactoryClassName="HandlerNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureHandlerNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3015"
        editPartClassName="PipelineEditPart"
        itemSemanticEditPolicyClassName="PipelineItemSemanticEditPolicy"
        notationViewFactoryClassName="PipelineViewFactory"
        canonicalEditPolicyClassName="PipelineCanonicalEditPolicy"
        compartments="//@diagram/@compartments.1"
        graphicalNodeEditPolicyClassName="PipelineGraphicalNodeEditPolicy"
        createCommandClassName="PipelineCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="PipelineEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="PipelineFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class PipelineFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePipelineSplitFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePipelineJoinFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePipelineNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigurePipelineCompartmentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePipelineIterablePrecedingFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePipelineIterableFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePipelineIconFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public PipelineFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(284)&#xA;, getMapMode().DPtoLP(89)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure pipelineUpperFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;pipelineUpperFigure0.setFill(false);&#xA;pipelineUpperFigure0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintPipelineUpperFigure0 = new org.eclipse.draw2d.GridData();&#xA;constraintPipelineUpperFigure0.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintPipelineUpperFigure0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintPipelineUpperFigure0.horizontalIndent = 0;&#xA;constraintPipelineUpperFigure0.horizontalSpan = 0;&#xA;constraintPipelineUpperFigure0.verticalSpan = 0;&#xA;constraintPipelineUpperFigure0.grabExcessHorizontalSpace = true;&#xA;constraintPipelineUpperFigure0.grabExcessVerticalSpace = false;&#xA;this.add(pipelineUpperFigure0, constraintPipelineUpperFigure0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutPipelineUpperFigure0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutPipelineUpperFigure0.numColumns = 3;&#xA;&#x9;layoutPipelineUpperFigure0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutPipelineUpperFigure0.horizontalSpacing = 0;&#xA;&#x9;layoutPipelineUpperFigure0.verticalSpacing = 0;&#xA;&#x9;layoutPipelineUpperFigure0.marginWidth = 0;&#xA;&#x9;layoutPipelineUpperFigure0.marginHeight = 0;&#xA;&#x9;pipelineUpperFigure0.setLayoutManager(layoutPipelineUpperFigure0);&#xA;&#xA;&#xA;&#xA;fFigurePipelineJoinFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigurePipelineJoinFigure.setText(&quot;&quot;);&#xA;fFigurePipelineJoinFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePipelineJoinFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePipelineJoinFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineJoinFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigurePipelineJoinFigure.horizontalIndent = 0;&#xA;constraintFFigurePipelineJoinFigure.horizontalSpan = 1;&#xA;constraintFFigurePipelineJoinFigure.verticalSpan = 1;&#xA;constraintFFigurePipelineJoinFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigurePipelineJoinFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigurePipelineJoinFigure.widthHint = 43;&#xA;constraintFFigurePipelineJoinFigure.heightHint = 40;&#xA;pipelineUpperFigure0.add(fFigurePipelineJoinFigure, constraintFFigurePipelineJoinFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure pipelineNameHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;pipelineNameHolder1.setFill(false);&#xA;pipelineNameHolder1.setOutline(false);&#xA;pipelineNameHolder1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintPipelineNameHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintPipelineNameHolder1.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintPipelineNameHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintPipelineNameHolder1.horizontalIndent = 0;&#xA;constraintPipelineNameHolder1.horizontalSpan = 1;&#xA;constraintPipelineNameHolder1.verticalSpan = 1;&#xA;constraintPipelineNameHolder1.grabExcessHorizontalSpace = true;&#xA;constraintPipelineNameHolder1.grabExcessVerticalSpace = false;&#xA;pipelineUpperFigure0.add(pipelineNameHolder1, constraintPipelineNameHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutPipelineNameHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutPipelineNameHolder1.numColumns = 1;&#xA;&#x9;layoutPipelineNameHolder1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutPipelineNameHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutPipelineNameHolder1.verticalSpacing = 0;&#xA;&#x9;layoutPipelineNameHolder1.marginWidth = 0;&#xA;&#x9;layoutPipelineNameHolder1.marginHeight = 0;&#xA;&#x9;pipelineNameHolder1.setLayoutManager(layoutPipelineNameHolder1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure pipelineNameHolderFigure2 = new org.eclipse.draw2d.RectangleFigure();&#xA;pipelineNameHolderFigure2.setFill(false);&#xA;pipelineNameHolderFigure2.setOutline(false);&#xA;pipelineNameHolderFigure2.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintPipelineNameHolderFigure2 = new org.eclipse.draw2d.GridData();&#xA;constraintPipelineNameHolderFigure2.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintPipelineNameHolderFigure2.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintPipelineNameHolderFigure2.horizontalIndent = 0;&#xA;constraintPipelineNameHolderFigure2.horizontalSpan = 0;&#xA;constraintPipelineNameHolderFigure2.verticalSpan = 0;&#xA;constraintPipelineNameHolderFigure2.grabExcessHorizontalSpace = true;&#xA;constraintPipelineNameHolderFigure2.grabExcessVerticalSpace = false;&#xA;pipelineNameHolder1.add(pipelineNameHolderFigure2, constraintPipelineNameHolderFigure2);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutPipelineNameHolderFigure2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutPipelineNameHolderFigure2.numColumns = 2;&#xA;&#x9;layoutPipelineNameHolderFigure2.makeColumnsEqualWidth = false;&#xA;&#x9;layoutPipelineNameHolderFigure2.horizontalSpacing = 0;&#xA;&#x9;layoutPipelineNameHolderFigure2.verticalSpacing = 0;&#xA;&#x9;layoutPipelineNameHolderFigure2.marginWidth = 0;&#xA;&#x9;layoutPipelineNameHolderFigure2.marginHeight = 0;&#xA;&#x9;pipelineNameHolderFigure2.setLayoutManager(layoutPipelineNameHolderFigure2);&#xA;&#xA;&#xA;&#xA;fFigurePipelineIconFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigurePipelineIconFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePipelineIconFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePipelineIconFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineIconFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineIconFigure.horizontalIndent = 0;&#xA;constraintFFigurePipelineIconFigure.horizontalSpan = 0;&#xA;constraintFFigurePipelineIconFigure.verticalSpan = 0;&#xA;constraintFFigurePipelineIconFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigurePipelineIconFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigurePipelineIconFigure.widthHint = 26;&#xA;constraintFFigurePipelineIconFigure.heightHint = 25;&#xA;pipelineNameHolderFigure2.add(fFigurePipelineIconFigure, constraintFFigurePipelineIconFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigurePipelineNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigurePipelineNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigurePipelineNameFigure.setFont(FFIGUREPIPELINENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePipelineNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePipelineNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineNameFigure.horizontalIndent = 0;&#xA;constraintFFigurePipelineNameFigure.horizontalSpan = 0;&#xA;constraintFFigurePipelineNameFigure.verticalSpan = 0;&#xA;constraintFFigurePipelineNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigurePipelineNameFigure.grabExcessVerticalSpace = false;&#xA;pipelineNameHolderFigure2.add(fFigurePipelineNameFigure, constraintFFigurePipelineNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure pipelineIterableHolderFigure2 = new org.eclipse.draw2d.RectangleFigure();&#xA;pipelineIterableHolderFigure2.setFill(false);&#xA;pipelineIterableHolderFigure2.setOutline(false);&#xA;pipelineIterableHolderFigure2.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintPipelineIterableHolderFigure2 = new org.eclipse.draw2d.GridData();&#xA;constraintPipelineIterableHolderFigure2.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintPipelineIterableHolderFigure2.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintPipelineIterableHolderFigure2.horizontalIndent = 0;&#xA;constraintPipelineIterableHolderFigure2.horizontalSpan = 0;&#xA;constraintPipelineIterableHolderFigure2.verticalSpan = 0;&#xA;constraintPipelineIterableHolderFigure2.grabExcessHorizontalSpace = true;&#xA;constraintPipelineIterableHolderFigure2.grabExcessVerticalSpace = false;&#xA;pipelineNameHolder1.add(pipelineIterableHolderFigure2, constraintPipelineIterableHolderFigure2);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutPipelineIterableHolderFigure2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutPipelineIterableHolderFigure2.numColumns = 2;&#xA;&#x9;layoutPipelineIterableHolderFigure2.makeColumnsEqualWidth = false;&#xA;&#x9;layoutPipelineIterableHolderFigure2.horizontalSpacing = 0;&#xA;&#x9;layoutPipelineIterableHolderFigure2.verticalSpacing = 0;&#xA;&#x9;layoutPipelineIterableHolderFigure2.marginWidth = 0;&#xA;&#x9;layoutPipelineIterableHolderFigure2.marginHeight = 0;&#xA;&#x9;pipelineIterableHolderFigure2.setLayoutManager(layoutPipelineIterableHolderFigure2);&#xA;&#xA;&#xA;&#xA;fFigurePipelineIterablePrecedingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigurePipelineIterablePrecedingFigure.setText(&quot;&quot;);&#xA;&#x9;fFigurePipelineIterablePrecedingFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigurePipelineIterablePrecedingFigure.setFont(FFIGUREPIPELINEITERABLEPRECEDINGFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePipelineIterablePrecedingFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePipelineIterablePrecedingFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineIterablePrecedingFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineIterablePrecedingFigure.horizontalIndent = 0;&#xA;constraintFFigurePipelineIterablePrecedingFigure.horizontalSpan = 0;&#xA;constraintFFigurePipelineIterablePrecedingFigure.verticalSpan = 0;&#xA;constraintFFigurePipelineIterablePrecedingFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigurePipelineIterablePrecedingFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigurePipelineIterablePrecedingFigure.widthHint = 21;&#xA;constraintFFigurePipelineIterablePrecedingFigure.heightHint = 15;&#xA;pipelineIterableHolderFigure2.add(fFigurePipelineIterablePrecedingFigure, constraintFFigurePipelineIterablePrecedingFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigurePipelineIterableFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigurePipelineIterableFigure.setText(&quot;&quot;);&#xA;&#xA;fFigurePipelineIterableFigure.setFont(FFIGUREPIPELINEITERABLEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePipelineIterableFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePipelineIterableFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineIterableFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineIterableFigure.horizontalIndent = 0;&#xA;constraintFFigurePipelineIterableFigure.horizontalSpan = 0;&#xA;constraintFFigurePipelineIterableFigure.verticalSpan = 0;&#xA;constraintFFigurePipelineIterableFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigurePipelineIterableFigure.grabExcessVerticalSpace = false;&#xA;pipelineIterableHolderFigure2.add(fFigurePipelineIterableFigure, constraintFFigurePipelineIterableFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigurePipelineSplitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigurePipelineSplitFigure.setText(&quot;&quot;);&#xA;fFigurePipelineSplitFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePipelineSplitFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePipelineSplitFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigurePipelineSplitFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigurePipelineSplitFigure.horizontalIndent = 0;&#xA;constraintFFigurePipelineSplitFigure.horizontalSpan = 1;&#xA;constraintFFigurePipelineSplitFigure.verticalSpan = 1;&#xA;constraintFFigurePipelineSplitFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigurePipelineSplitFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigurePipelineSplitFigure.widthHint = 43;&#xA;constraintFFigurePipelineSplitFigure.heightHint = 40;&#xA;pipelineUpperFigure0.add(fFigurePipelineSplitFigure, constraintFFigurePipelineSplitFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure pipelineCompartmentHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;pipelineCompartmentHolder0.setFill(false);&#xA;pipelineCompartmentHolder0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintPipelineCompartmentHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintPipelineCompartmentHolder0.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintPipelineCompartmentHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintPipelineCompartmentHolder0.horizontalIndent = 0;&#xA;constraintPipelineCompartmentHolder0.horizontalSpan = 0;&#xA;constraintPipelineCompartmentHolder0.verticalSpan = 0;&#xA;constraintPipelineCompartmentHolder0.grabExcessHorizontalSpace = true;&#xA;constraintPipelineCompartmentHolder0.grabExcessVerticalSpace = true;&#xA;this.add(pipelineCompartmentHolder0, constraintPipelineCompartmentHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutPipelineCompartmentHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutPipelineCompartmentHolder0.numColumns = 1;&#xA;&#x9;layoutPipelineCompartmentHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutPipelineCompartmentHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutPipelineCompartmentHolder0.verticalSpacing = 0;&#xA;&#x9;layoutPipelineCompartmentHolder0.marginWidth = 0;&#xA;&#x9;layoutPipelineCompartmentHolder0.marginHeight = 0;&#xA;&#x9;pipelineCompartmentHolder0.setLayoutManager(layoutPipelineCompartmentHolder0);&#xA;&#xA;&#xA;&#xA;fFigurePipelineCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();&#xA;&#x9;fFigurePipelineCompartmentFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;fFigurePipelineCompartmentFigure.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(255)&#xA;, getMapMode().DPtoLP(58)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigurePipelineCompartmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigurePipelineCompartmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigurePipelineCompartmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigurePipelineCompartmentFigure.horizontalIndent = 0;&#xA;constraintFFigurePipelineCompartmentFigure.horizontalSpan = 0;&#xA;constraintFFigurePipelineCompartmentFigure.verticalSpan = 0;&#xA;constraintFFigurePipelineCompartmentFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigurePipelineCompartmentFigure.grabExcessVerticalSpace = true;&#xA;pipelineCompartmentHolder0.add(fFigurePipelineCompartmentFigure, constraintFFigurePipelineCompartmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePipelineSplitFigure() {&#xA;&#x9;&#x9;return fFigurePipelineSplitFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePipelineJoinFigure() {&#xA;&#x9;&#x9;return fFigurePipelineJoinFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePipelineNameFigure() {&#xA;&#x9;&#x9;return fFigurePipelineNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigurePipelineCompartmentFigure() {&#xA;&#x9;&#x9;return fFigurePipelineCompartmentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePipelineIterablePrecedingFigure() {&#xA;&#x9;&#x9;return fFigurePipelineIterablePrecedingFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePipelineIterableFigure() {&#xA;&#x9;&#x9;return fFigurePipelineIterableFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePipelineIconFigure() {&#xA;&#x9;&#x9;return fFigurePipelineIconFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPIPELINENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPIPELINEITERABLEPRECEDINGFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPIPELINEITERABLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="284"
            height="89"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Pipeline"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
      </modelFacet>
      <labels
          visualID="5028"
          editPartClassName="PipelineNameEditPart"
          itemSemanticEditPolicyClassName="PipelineNameItemSemanticEditPolicy"
          notationViewFactoryClassName="PipelineNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigurePipelineNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5029"
          editPartClassName="PipelineIterableEditPart"
          itemSemanticEditPolicyClassName="PipelineIterableItemSemanticEditPolicy"
          notationViewFactoryClassName="PipelineLabelViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigurePipelineIterableFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
      <labels
          visualID="5030"
          editPartClassName="PipelineIconEditPart"
          itemSemanticEditPolicyClassName="PipelineIconItemSemanticEditPolicy"
          notationViewFactoryClassName="PipelineLabelViewFactory"
          readOnly="true"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigurePipelineIconFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3016"
        editPartClassName="PipelineProcedureEditPart"
        itemSemanticEditPolicyClassName="PipelineProcedureItemSemanticEditPolicy"
        notationViewFactoryClassName="ProcedureViewFactory"
        canonicalEditPolicyClassName="PipelineProcedureCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="PipelineProcedureGraphicalNodeEditPolicy"
        createCommandClassName="PipelineProcedureCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.4/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ProcedureFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ProcedureFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureJoinFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureSplitFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureExecutableFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureExecutablePrecedingFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcedureExecutableNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ProcedureFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(265)&#xA;, getMapMode().DPtoLP(43)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureProcedureJoinFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureJoinFigure.setText(&quot;&quot;);&#xA;fFigureProcedureJoinFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureJoinFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureJoinFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureJoinFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureProcedureJoinFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureJoinFigure.horizontalSpan = 1;&#xA;constraintFFigureProcedureJoinFigure.verticalSpan = 1;&#xA;constraintFFigureProcedureJoinFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureProcedureJoinFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureProcedureJoinFigure.widthHint = 43;&#xA;constraintFFigureProcedureJoinFigure.heightHint = 43;&#xA;this.add(fFigureProcedureJoinFigure, constraintFFigureProcedureJoinFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure procedureNameHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;procedureNameHolder0.setFill(false);&#xA;procedureNameHolder0.setOutline(false);&#xA;procedureNameHolder0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintProcedureNameHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintProcedureNameHolder0.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintProcedureNameHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProcedureNameHolder0.horizontalIndent = 0;&#xA;constraintProcedureNameHolder0.horizontalSpan = 1;&#xA;constraintProcedureNameHolder0.verticalSpan = 1;&#xA;constraintProcedureNameHolder0.grabExcessHorizontalSpace = true;&#xA;constraintProcedureNameHolder0.grabExcessVerticalSpace = false;&#xA;this.add(procedureNameHolder0, constraintProcedureNameHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutProcedureNameHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutProcedureNameHolder0.numColumns = 1;&#xA;&#x9;layoutProcedureNameHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutProcedureNameHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutProcedureNameHolder0.verticalSpacing = 0;&#xA;&#x9;layoutProcedureNameHolder0.marginWidth = 0;&#xA;&#x9;layoutProcedureNameHolder0.marginHeight = 0;&#xA;&#x9;procedureNameHolder0.setLayoutManager(layoutProcedureNameHolder0);&#xA;&#xA;&#xA;&#xA;fFigureProcedureNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureProcedureNameFigure.setFont(FFIGUREPROCEDURENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureNameFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureNameFigure.horizontalSpan = 0;&#xA;constraintFFigureProcedureNameFigure.verticalSpan = 0;&#xA;constraintFFigureProcedureNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProcedureNameFigure.grabExcessVerticalSpace = false;&#xA;procedureNameHolder0.add(fFigureProcedureNameFigure, constraintFFigureProcedureNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure procedureExecutableHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;procedureExecutableHolder1.setFill(false);&#xA;procedureExecutableHolder1.setOutline(false);&#xA;procedureExecutableHolder1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintProcedureExecutableHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintProcedureExecutableHolder1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProcedureExecutableHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProcedureExecutableHolder1.horizontalIndent = 0;&#xA;constraintProcedureExecutableHolder1.horizontalSpan = 0;&#xA;constraintProcedureExecutableHolder1.verticalSpan = 0;&#xA;constraintProcedureExecutableHolder1.grabExcessHorizontalSpace = true;&#xA;constraintProcedureExecutableHolder1.grabExcessVerticalSpace = false;&#xA;procedureNameHolder0.add(procedureExecutableHolder1, constraintProcedureExecutableHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutProcedureExecutableHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutProcedureExecutableHolder1.numColumns = 3;&#xA;&#x9;layoutProcedureExecutableHolder1.makeColumnsEqualWidth = false;&#xA;&#x9;layoutProcedureExecutableHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutProcedureExecutableHolder1.verticalSpacing = 0;&#xA;&#x9;layoutProcedureExecutableHolder1.marginWidth = 0;&#xA;&#x9;layoutProcedureExecutableHolder1.marginHeight = 0;&#xA;&#x9;procedureExecutableHolder1.setLayoutManager(layoutProcedureExecutableHolder1);&#xA;&#xA;&#xA;&#xA;fFigureProcedureExecutablePrecedingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureExecutablePrecedingFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureProcedureExecutablePrecedingFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureProcedureExecutablePrecedingFigure.setFont(FFIGUREPROCEDUREEXECUTABLEPRECEDINGFIGURE_FONT);&#xA;&#xA;&#xA;fFigureProcedureExecutablePrecedingFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureExecutablePrecedingFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureExecutablePrecedingFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.horizontalSpan = 0;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.verticalSpan = 0;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.widthHint = 20;&#xA;constraintFFigureProcedureExecutablePrecedingFigure.heightHint = 15;&#xA;procedureExecutableHolder1.add(fFigureProcedureExecutablePrecedingFigure, constraintFFigureProcedureExecutablePrecedingFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureProcedureExecutableFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureExecutableFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureProcedureExecutableFigure.setFont(FFIGUREPROCEDUREEXECUTABLEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureProcedureExecutableFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureExecutableFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureExecutableFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutableFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutableFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureExecutableFigure.horizontalSpan = 0;&#xA;constraintFFigureProcedureExecutableFigure.verticalSpan = 0;&#xA;constraintFFigureProcedureExecutableFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProcedureExecutableFigure.grabExcessVerticalSpace = false;&#xA;procedureExecutableHolder1.add(fFigureProcedureExecutableFigure, constraintFFigureProcedureExecutableFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureProcedureExecutableNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureExecutableNameFigure.setText(&quot;&quot;);&#xA;&#x9;fFigureProcedureExecutableNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;fFigureProcedureExecutableNameFigure.setFont(FFIGUREPROCEDUREEXECUTABLENAMEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureProcedureExecutableNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureExecutableNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureExecutableNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutableNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureExecutableNameFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureExecutableNameFigure.horizontalSpan = 0;&#xA;constraintFFigureProcedureExecutableNameFigure.verticalSpan = 0;&#xA;constraintFFigureProcedureExecutableNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProcedureExecutableNameFigure.grabExcessVerticalSpace = false;&#xA;procedureExecutableHolder1.add(fFigureProcedureExecutableNameFigure, constraintFFigureProcedureExecutableNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureProcedureSplitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcedureSplitFigure.setText(&quot;&quot;);&#xA;fFigureProcedureSplitFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProcedureSplitFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProcedureSplitFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProcedureSplitFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureProcedureSplitFigure.horizontalIndent = 0;&#xA;constraintFFigureProcedureSplitFigure.horizontalSpan = 1;&#xA;constraintFFigureProcedureSplitFigure.verticalSpan = 1;&#xA;constraintFFigureProcedureSplitFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureProcedureSplitFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureProcedureSplitFigure.widthHint = 43;&#xA;constraintFFigureProcedureSplitFigure.heightHint = 43;&#xA;this.add(fFigureProcedureSplitFigure, constraintFFigureProcedureSplitFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureNameFigure() {&#xA;&#x9;&#x9;return fFigureProcedureNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureJoinFigure() {&#xA;&#x9;&#x9;return fFigureProcedureJoinFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureSplitFigure() {&#xA;&#x9;&#x9;return fFigureProcedureSplitFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureExecutableFigure() {&#xA;&#x9;&#x9;return fFigureProcedureExecutableFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureExecutablePrecedingFigure() {&#xA;&#x9;&#x9;return fFigureProcedureExecutablePrecedingFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcedureExecutableNameFigure() {&#xA;&#x9;&#x9;return fFigureProcedureExecutableNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROCEDURENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROCEDUREEXECUTABLEPRECEDINGFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROCEDUREEXECUTABLEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROCEDUREEXECUTABLENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="265"
            height="43"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Procedure"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Pipeline/procedures"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Pipeline/procedures"/>
      </modelFacet>
      <labels
          visualID="5026"
          editPartClassName="PipelineProcedureNameEditPart"
          itemSemanticEditPolicyClassName="PipelineProcedureNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ProcedureNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureProcedureNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5027"
          editPartClassName="PipelineProcedureExecutableEditPart"
          itemSemanticEditPolicyClassName="PipelineProcedureExecutableItemSemanticEditPolicy"
          notationViewFactoryClassName="ProcedureExecutableViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureProcedureExecutableFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Procedure/executable"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3011"
        editPartClassName="DataEditPart"
        itemSemanticEditPolicyClassName="DataItemSemanticEditPolicy"
        notationViewFactoryClassName="DataViewFactory"
        canonicalEditPolicyClassName="DataCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="DataGraphicalNodeEditPolicy"
        createCommandClassName="DataCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="DataEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="DataFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class DataFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDataNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDataTypeFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public DataFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(110)&#xA;, getMapMode().DPtoLP(43)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureDataNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureDataNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureDataNameFigure.setFont(FFIGUREDATANAMEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureDataNameFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureDataNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureDataNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDataNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDataNameFigure.horizontalIndent = 0;&#xA;constraintFFigureDataNameFigure.horizontalSpan = 0;&#xA;constraintFFigureDataNameFigure.verticalSpan = 0;&#xA;constraintFFigureDataNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureDataNameFigure.grabExcessVerticalSpace = false;&#xA;this.add(fFigureDataNameFigure, constraintFFigureDataNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureDataTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureDataTypeFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureDataTypeFigure.setFont(FFIGUREDATATYPEFIGURE_FONT);&#xA;&#xA;&#xA;fFigureDataTypeFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureDataTypeFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureDataTypeFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDataTypeFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureDataTypeFigure.horizontalIndent = 0;&#xA;constraintFFigureDataTypeFigure.horizontalSpan = 0;&#xA;constraintFFigureDataTypeFigure.verticalSpan = 0;&#xA;constraintFFigureDataTypeFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureDataTypeFigure.grabExcessVerticalSpace = false;&#xA;this.add(fFigureDataTypeFigure, constraintFFigureDataTypeFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDataNameFigure() {&#xA;&#x9;&#x9;return fFigureDataNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDataTypeFigure() {&#xA;&#x9;&#x9;return fFigureDataTypeFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREDATANAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREDATATYPEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 8, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="110"
            height="43"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Data"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/data"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/data"/>
      </modelFacet>
      <labels
          visualID="5018"
          editPartClassName="DataNameEditPart"
          itemSemanticEditPolicyClassName="DataNameItemSemanticEditPolicy"
          notationViewFactoryClassName="DataNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureDataNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5019"
          editPartClassName="DataTypeEditPart"
          itemSemanticEditPolicyClassName="DataTypeItemSemanticEditPolicy"
          notationViewFactoryClassName="DataTypeViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureDataTypeFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Data/type"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3014"
        editPartClassName="BusinessProcedureEditPart"
        itemSemanticEditPolicyClassName="BusinessProcedureItemSemanticEditPolicy"
        notationViewFactoryClassName="BusinessProcedureViewFactory"
        canonicalEditPolicyClassName="BusinessProcedureCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="BusinessProcedureGraphicalNodeEditPolicy"
        createCommandClassName="BusinessProcedureCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="BusinessProcedureEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="BusinessProcedureFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class BusinessProcedureFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBusinessProcedureNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBusinessProcedureJoinFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBusinessProcedureSplitFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public BusinessProcedureFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(265)&#xA;, getMapMode().DPtoLP(43)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureBusinessProcedureJoinFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureBusinessProcedureJoinFigure.setText(&quot;&quot;);&#xA;fFigureBusinessProcedureJoinFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureBusinessProcedureJoinFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureBusinessProcedureJoinFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureBusinessProcedureJoinFigure.horizontalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintFFigureBusinessProcedureJoinFigure.horizontalIndent = 0;&#xA;constraintFFigureBusinessProcedureJoinFigure.horizontalSpan = 1;&#xA;constraintFFigureBusinessProcedureJoinFigure.verticalSpan = 1;&#xA;constraintFFigureBusinessProcedureJoinFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureBusinessProcedureJoinFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureBusinessProcedureJoinFigure.widthHint = 43;&#xA;constraintFFigureBusinessProcedureJoinFigure.heightHint = 43;&#xA;this.add(fFigureBusinessProcedureJoinFigure, constraintFFigureBusinessProcedureJoinFigure);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure businessProcedureNameHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;businessProcedureNameHolder0.setFill(false);&#xA;businessProcedureNameHolder0.setOutline(false);&#xA;businessProcedureNameHolder0.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintBusinessProcedureNameHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintBusinessProcedureNameHolder0.verticalAlignment = org.eclipse.draw2d.GridData.BEGINNING;&#xA;constraintBusinessProcedureNameHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintBusinessProcedureNameHolder0.horizontalIndent = 0;&#xA;constraintBusinessProcedureNameHolder0.horizontalSpan = 1;&#xA;constraintBusinessProcedureNameHolder0.verticalSpan = 1;&#xA;constraintBusinessProcedureNameHolder0.grabExcessHorizontalSpace = true;&#xA;constraintBusinessProcedureNameHolder0.grabExcessVerticalSpace = false;&#xA;this.add(businessProcedureNameHolder0, constraintBusinessProcedureNameHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutBusinessProcedureNameHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutBusinessProcedureNameHolder0.numColumns = 1;&#xA;&#x9;layoutBusinessProcedureNameHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutBusinessProcedureNameHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutBusinessProcedureNameHolder0.verticalSpacing = 0;&#xA;&#x9;layoutBusinessProcedureNameHolder0.marginWidth = 0;&#xA;&#x9;layoutBusinessProcedureNameHolder0.marginHeight = 0;&#xA;&#x9;businessProcedureNameHolder0.setLayoutManager(layoutBusinessProcedureNameHolder0);&#xA;&#xA;&#xA;&#xA;fFigureBusinessProcedureNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureBusinessProcedureNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureBusinessProcedureNameFigure.setFont(FFIGUREBUSINESSPROCEDURENAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureBusinessProcedureNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureBusinessProcedureNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureBusinessProcedureNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureBusinessProcedureNameFigure.horizontalIndent = 0;&#xA;constraintFFigureBusinessProcedureNameFigure.horizontalSpan = 0;&#xA;constraintFFigureBusinessProcedureNameFigure.verticalSpan = 0;&#xA;constraintFFigureBusinessProcedureNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureBusinessProcedureNameFigure.grabExcessVerticalSpace = false;&#xA;businessProcedureNameHolder0.add(fFigureBusinessProcedureNameFigure, constraintFFigureBusinessProcedureNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;fFigureBusinessProcedureSplitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureBusinessProcedureSplitFigure.setText(&quot;&quot;);&#xA;fFigureBusinessProcedureSplitFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureBusinessProcedureSplitFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureBusinessProcedureSplitFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureBusinessProcedureSplitFigure.horizontalAlignment = org.eclipse.draw2d.GridData.END;&#xA;constraintFFigureBusinessProcedureSplitFigure.horizontalIndent = 0;&#xA;constraintFFigureBusinessProcedureSplitFigure.horizontalSpan = 1;&#xA;constraintFFigureBusinessProcedureSplitFigure.verticalSpan = 1;&#xA;constraintFFigureBusinessProcedureSplitFigure.grabExcessHorizontalSpace = false;&#xA;constraintFFigureBusinessProcedureSplitFigure.grabExcessVerticalSpace = false;&#xA;constraintFFigureBusinessProcedureSplitFigure.widthHint = 43;&#xA;constraintFFigureBusinessProcedureSplitFigure.heightHint = 43;&#xA;this.add(fFigureBusinessProcedureSplitFigure, constraintFFigureBusinessProcedureSplitFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBusinessProcedureNameFigure() {&#xA;&#x9;&#x9;return fFigureBusinessProcedureNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBusinessProcedureJoinFigure() {&#xA;&#x9;&#x9;return fFigureBusinessProcedureJoinFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBusinessProcedureSplitFigure() {&#xA;&#x9;&#x9;return fFigureBusinessProcedureSplitFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREBUSINESSPROCEDURENAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="24"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="265"
            height="43"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/BusinessProcedure"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program/elements"/>
      </modelFacet>
      <labels
          visualID="5025"
          editPartClassName="BusinessProcedureNameEditPart"
          itemSemanticEditPolicyClassName="BusinessProcedureNameItemSemanticEditPolicy"
          notationViewFactoryClassName="BusinessProcedureNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureBusinessProcedureNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <topLevelNodes
        visualID="2001"
        editPartClassName="ProgramEditPart"
        itemSemanticEditPolicyClassName="ProgramItemSemanticEditPolicy"
        notationViewFactoryClassName="ProgramViewFactory"
        canonicalEditPolicyClassName="ProgramCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0"
        graphicalNodeEditPolicyClassName="ProgramGraphicalNodeEditPolicy"
        createCommandClassName="ProgramCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ProgramEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ProgramFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ProgramFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureProgramCompartmentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProgramNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ProgramFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(500)&#xA;, getMapMode().DPtoLP(300)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure programUpperFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;programUpperFigure0.setFill(false);&#xA;programUpperFigure0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintProgramUpperFigure0 = new org.eclipse.draw2d.GridData();&#xA;constraintProgramUpperFigure0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProgramUpperFigure0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintProgramUpperFigure0.horizontalIndent = 0;&#xA;constraintProgramUpperFigure0.horizontalSpan = 0;&#xA;constraintProgramUpperFigure0.verticalSpan = 0;&#xA;constraintProgramUpperFigure0.grabExcessHorizontalSpace = true;&#xA;constraintProgramUpperFigure0.grabExcessVerticalSpace = false;&#xA;this.add(programUpperFigure0, constraintProgramUpperFigure0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutProgramUpperFigure0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutProgramUpperFigure0.numColumns = 1;&#xA;&#x9;layoutProgramUpperFigure0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutProgramUpperFigure0.horizontalSpacing = 0;&#xA;&#x9;layoutProgramUpperFigure0.verticalSpacing = 0;&#xA;&#x9;layoutProgramUpperFigure0.marginWidth = 0;&#xA;&#x9;layoutProgramUpperFigure0.marginHeight = 0;&#xA;&#x9;programUpperFigure0.setLayoutManager(layoutProgramUpperFigure0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure programNameHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;programNameHolder1.setFill(false);&#xA;programNameHolder1.setOutline(false);&#xA;programNameHolder1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintProgramNameHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintProgramNameHolder1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProgramNameHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintProgramNameHolder1.horizontalIndent = 0;&#xA;constraintProgramNameHolder1.horizontalSpan = 1;&#xA;constraintProgramNameHolder1.verticalSpan = 1;&#xA;constraintProgramNameHolder1.grabExcessHorizontalSpace = true;&#xA;constraintProgramNameHolder1.grabExcessVerticalSpace = true;&#xA;constraintProgramNameHolder1.widthHint = 490;&#xA;constraintProgramNameHolder1.heightHint = 28;&#xA;programUpperFigure0.add(programNameHolder1, constraintProgramNameHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutProgramNameHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutProgramNameHolder1.numColumns = 1;&#xA;&#x9;layoutProgramNameHolder1.makeColumnsEqualWidth = true;&#xA;&#x9;layoutProgramNameHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutProgramNameHolder1.verticalSpacing = 0;&#xA;&#x9;layoutProgramNameHolder1.marginWidth = 0;&#xA;&#x9;layoutProgramNameHolder1.marginHeight = 0;&#xA;&#x9;programNameHolder1.setLayoutManager(layoutProgramNameHolder1);&#xA;&#xA;&#xA;&#xA;fFigureProgramNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProgramNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;fFigureProgramNameFigure.setFont(FFIGUREPROGRAMNAMEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProgramNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProgramNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProgramNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureProgramNameFigure.horizontalIndent = 0;&#xA;constraintFFigureProgramNameFigure.horizontalSpan = 0;&#xA;constraintFFigureProgramNameFigure.verticalSpan = 0;&#xA;constraintFFigureProgramNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProgramNameFigure.grabExcessVerticalSpace = true;&#xA;programNameHolder1.add(fFigureProgramNameFigure, constraintFFigureProgramNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure programCompartmentHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;programCompartmentHolder0.setFill(false);&#xA;programCompartmentHolder0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintProgramCompartmentHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintProgramCompartmentHolder0.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintProgramCompartmentHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintProgramCompartmentHolder0.horizontalIndent = 0;&#xA;constraintProgramCompartmentHolder0.horizontalSpan = 0;&#xA;constraintProgramCompartmentHolder0.verticalSpan = 0;&#xA;constraintProgramCompartmentHolder0.grabExcessHorizontalSpace = true;&#xA;constraintProgramCompartmentHolder0.grabExcessVerticalSpace = true;&#xA;this.add(programCompartmentHolder0, constraintProgramCompartmentHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutProgramCompartmentHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutProgramCompartmentHolder0.numColumns = 1;&#xA;&#x9;layoutProgramCompartmentHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutProgramCompartmentHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutProgramCompartmentHolder0.verticalSpacing = 0;&#xA;&#x9;layoutProgramCompartmentHolder0.marginWidth = 0;&#xA;&#x9;layoutProgramCompartmentHolder0.marginHeight = 0;&#xA;&#x9;programCompartmentHolder0.setLayoutManager(layoutProgramCompartmentHolder0);&#xA;&#xA;&#xA;&#xA;fFigureProgramCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();&#xA;&#x9;fFigureProgramCompartmentFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;fFigureProgramCompartmentFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureProgramCompartmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureProgramCompartmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureProgramCompartmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureProgramCompartmentFigure.horizontalIndent = 0;&#xA;constraintFFigureProgramCompartmentFigure.horizontalSpan = 0;&#xA;constraintFFigureProgramCompartmentFigure.verticalSpan = 0;&#xA;constraintFFigureProgramCompartmentFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureProgramCompartmentFigure.grabExcessVerticalSpace = true;&#xA;programCompartmentHolder0.add(fFigureProgramCompartmentFigure, constraintFFigureProgramCompartmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureProgramCompartmentFigure() {&#xA;&#x9;&#x9;return fFigureProgramCompartmentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProgramNameFigure() {&#xA;&#x9;&#x9;return fFigureProgramNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREPROGRAMNAMEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="500"
            height="300"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Program"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Specification/programs"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Specification/programs"/>
      </modelFacet>
      <labels
          visualID="5020"
          editPartClassName="ProgramNameEditPart"
          itemSemanticEditPolicyClassName="ProgramNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ProgramNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureProgramNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/NamedElement/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <links
        visualID="4001"
        editPartClassName="LinkEditPart"
        itemSemanticEditPolicyClassName="LinkItemSemanticEditPolicy"
        notationViewFactoryClassName="LinkViewFactory"
        createCommandClassName="LinkCreateCommand"
        reorientCommandClassName="LinkReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="LinkEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="LinkFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class LinkFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureLinkPredicateInfoFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public LinkFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(THIS_FORE&#xA;);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureLinkPredicateInfoFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureLinkPredicateInfoFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureLinkPredicateInfoFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureLinkPredicateInfoFigure() {&#xA;&#x9;&#x9;return fFigureLinkPredicateInfoFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_FORE = new org.eclipse.swt.graphics.Color(null, 50, 50, 50);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Link"/>
        <containmentMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Element/outputLinks"/>
        <childMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Element/outputLinks"/>
        <targetMetaFeature
            href="../../org.parallelj.model/model/parallelj.genmodel#//parallelj/Link/destination"/>
      </modelFacet>
      <labels
          visualID="6001"
          editPartClassName="LinkPredicateInfoEditPart"
          itemSemanticEditPolicyClassName="LinkPredicateInfoItemSemanticEditPolicy"
          notationViewFactoryClassName="LinkLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureLinkPredicateInfoFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.1"
          targetEnd="//@expressionProviders/@providers.0/@expressions.2"/>
    </links>
    <compartments
        visualID="7001"
        editPartClassName="ProgramProgramCompartmentEditPart"
        itemSemanticEditPolicyClassName="ProgramProgramCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="ProgramProgramCompartmentViewFactory"
        canonicalEditPolicyClassName="ProgramProgramCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.1 //@diagram/@childNodes.2 //@diagram/@childNodes.3 //@diagram/@childNodes.4 //@diagram/@childNodes.5 //@diagram/@childNodes.6 //@diagram/@childNodes.7 //@diagram/@childNodes.8 //@diagram/@childNodes.10 //@diagram/@childNodes.11"
        title="ProgramCompartment"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureProgramCompartmentFigure"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
    </compartments>
    <compartments
        visualID="7004"
        editPartClassName="PipelinePipelineCompartmentEditPart"
        itemSemanticEditPolicyClassName="PipelinePipelineCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="PipelinePipelineCompartmentViewFactory"
        canonicalEditPolicyClassName="PipelinePipelineCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.9"
        title="PipelineCompartment"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@childNodes.8"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigurePipelineCompartmentFigure"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
    </compartments>
    <palette>
      <groups
          title="Context"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Program"
            description="Create new Program"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Link"
            description="Create new Link"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Predicate"
            description="Create new Predicate"
            genNodes="//@diagram/@childNodes.3"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Data"
            description="Create new Data"
            genNodes="//@diagram/@childNodes.10"/>
      </groups>
      <groups
          title="Objects"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Procedure"
            description="Create new Procedure"
            genNodes="//@diagram/@childNodes.4 //@diagram/@childNodes.9"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ForEachLoop"
            description="Create new ForEachLoop"
            genNodes="//@diagram/@childNodes.5"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="WhileLoop"
            description="Create new WhileLoop"
            genNodes="//@diagram/@childNodes.6"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Handler"
            description="Create new Handler"
            genNodes="//@diagram/@childNodes.7"/>
      </groups>
      <groups
          title="Complex Objects"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Pipeline"
            description="Create new Pipeline"
            genNodes="//@diagram/@childNodes.8"/>
      </groups>
      <groups
          title="Advanced"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="InputCondition"
            description="Create new InputCondition"
            genNodes="//@diagram/@childNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="OutputCondition"
            description="Create new OutputCondition"
            genNodes="//@diagram/@childNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Condition"
            description="Create new Condition"
            genNodes="//@diagram/@childNodes.2"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="org.parallelj.diagram.general"
        name="ParallelJ Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.parallelj.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.parallelj.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.parallelj.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.parallelj.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin
      iD="org.parallelj.designer">
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.1"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.2"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.3"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.4"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.6"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.7"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@childNodes.9"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.8"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.10"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.11"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.4"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.4"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.6"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.6"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.7"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.7"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.8"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.9"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.9"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.11"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.4"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.4"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.5"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.6"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.6"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.7"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.7"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.8"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.9"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.9"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.11"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="../../org.parallelj.model/model/parallelj.genmodel#/"/>
  <expressionProviders>
    <providers
        xsi:type="gmfgen:GenExpressionInterpreter">
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="not self.oclIsTypeOf(ForEachLoop) and not self.oclIsTypeOf(WhileLoop) and not self.oclIsTypeOf(Handler) and not self.oclIsTypeOf(Pipeline) and not self.oclIsTypeOf(BusinessProcedure)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="not oclIsKindOf(OutputCondition) and not eContainer().oclIsKindOf(Pipeline) and not oclIsKindOf(Data) and not oclIsKindOf(Predicate)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="not oclIsKindOf(InputCondition) and not oclIsKindOf(Handler) and if oclIsKindOf(Condition) then not oppositeEnd.oclIsKindOf(Condition) else true endif and oppositeEnd.outputLinks -> select (p | p.destination = self ) -> size() &lt;> 1 and not eContainer().oclIsKindOf(Pipeline) and not oclIsKindOf(Data) and not oclIsKindOf(Predicate)"/>
    </providers>
  </expressionProviders>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:ExternalParser"
        uses="//@diagram/@childNodes.0/@labels.0/@modelFacet //@diagram/@childNodes.1/@labels.0/@modelFacet //@diagram/@childNodes.5/@labels.2/@modelFacet //@diagram/@childNodes.6/@labels.2/@modelFacet //@diagram/@childNodes.8/@labels.1/@modelFacet //@diagram/@childNodes.8/@labels.2/@modelFacet //@diagram/@links.0/@labels.0/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.2/@labels.0/@modelFacet //@diagram/@childNodes.3/@labels.0/@modelFacet //@diagram/@childNodes.4/@labels.0/@modelFacet //@diagram/@childNodes.4/@labels.1/@modelFacet //@diagram/@childNodes.5/@labels.0/@modelFacet //@diagram/@childNodes.5/@labels.1/@modelFacet //@diagram/@childNodes.6/@labels.0/@modelFacet //@diagram/@childNodes.6/@labels.1/@modelFacet //@diagram/@childNodes.7/@labels.0/@modelFacet //@diagram/@childNodes.9/@labels.0/@modelFacet //@diagram/@childNodes.9/@labels.1/@modelFacet //@diagram/@childNodes.8/@labels.0/@modelFacet //@diagram/@childNodes.10/@labels.0/@modelFacet //@diagram/@childNodes.10/@labels.1/@modelFacet //@diagram/@childNodes.11/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.0/@modelFacet"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
