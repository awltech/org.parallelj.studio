/*
* generated by Xtext
*/
grammar InternalPjl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.parallelj.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.parallelj.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.parallelj.services.PjlGrammarAccess;

}

@parser::members {

 	private PjlGrammarAccess grammarAccess;
 	
    public InternalPjlParser(TokenStream input, PjlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Specification";	
   	}
   	
   	@Override
   	protected PjlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSpecification
entryRuleSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificationRule()); }
	 iv_ruleSpecification=ruleSpecification 
	 { $current=$iv_ruleSpecification.current; } 
	 EOF 
;

// Rule Specification
ruleSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificationAccess().getSpecificationAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getProgramsProgramParserRuleCall_1_0_0()); 
	    }
		lv_programs_1_0=ruleProgram		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		add(
       			$current, 
       			"programs",
        		lv_programs_1_0, 
        		"Program");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpecificationAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getProgramsProgramParserRuleCall_1_1_1_0()); 
	    }
		lv_programs_3_0=ruleProgram		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		add(
       			$current, 
       			"programs",
        		lv_programs_3_0, 
        		"Program");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_4='metaInformationContainer' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSpecificationAccess().getMetaInformationContainerKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getMetaInformationContainerMetaInformationContainerParserRuleCall_2_1_0()); 
	    }
		lv_metaInformationContainer_5_0=ruleMetaInformationContainer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		set(
       			$current, 
       			"metaInformationContainer",
        		lv_metaInformationContainer_5_0, 
        		"MetaInformationContainer");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	 iv_ruleProgram=ruleProgram 
	 { $current=$iv_ruleProgram.current; } 
	 EOF 
;

// Rule Program
ruleProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Program' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProgramAccess().getProgramKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProgramAccess().getDescriptionKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getDescriptionEStringParserRuleCall_3_1_0()); 
	    }
		lv_description_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='capacity' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProgramAccess().getCapacityKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getCapacityEIntParserRuleCall_4_1_0()); 
	    }
		lv_capacity_6_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"capacity",
        		lv_capacity_6_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7='inputCondition' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProgramAccess().getInputConditionKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgramRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getInputConditionInputConditionCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='outputCondition' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getProgramAccess().getOutputConditionKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgramRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getOutputConditionOutputConditionCrossReference_8_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='predicates' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getProgramAccess().getPredicatesKeyword_9_0());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getPredicatesPredicateParserRuleCall_9_2_0()); 
	    }
		lv_predicates_13_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"predicates",
        		lv_predicates_13_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getProgramAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getPredicatesPredicateParserRuleCall_9_3_1_0()); 
	    }
		lv_predicates_15_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"predicates",
        		lv_predicates_15_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_9_4());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getElementsElementParserRuleCall_10_0_0()); 
	    }
		lv_elements_17_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_17_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getProgramAccess().getCommaKeyword_10_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getElementsElementParserRuleCall_10_1_1_0()); 
	    }
		lv_elements_19_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_19_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_20='data' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getProgramAccess().getDataKeyword_11_0());
    }
	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getDataDataParserRuleCall_11_2_0()); 
	    }
		lv_data_22_0=ruleData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"data",
        		lv_data_22_0, 
        		"Data");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getProgramAccess().getCommaKeyword_11_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getDataDataParserRuleCall_11_3_1_0()); 
	    }
		lv_data_24_0=ruleData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"data",
        		lv_data_24_0, 
        		"Data");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_11_4());
    }
)?	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleMetaInformationContainer
entryRuleMetaInformationContainer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaInformationContainerRule()); }
	 iv_ruleMetaInformationContainer=ruleMetaInformationContainer 
	 { $current=$iv_ruleMetaInformationContainer.current; } 
	 EOF 
;

// Rule MetaInformationContainer
ruleMetaInformationContainer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMetaInformationContainerAccess().getMetaInformationContainerAction_0(),
            $current);
    }
)	otherlv_1='MetaInformationContainer' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMetaInformationContainerAccess().getMetaInformationContainerKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMetaInformationContainerAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='metaInformation' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMetaInformationContainerAccess().getMetaInformationKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMetaInformationContainerAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaInformationContainerAccess().getMetaInformationMetaInformationParserRuleCall_3_2_0()); 
	    }
		lv_metaInformation_5_0=ruleMetaInformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaInformationContainerRule());
	        }
       		add(
       			$current, 
       			"metaInformation",
        		lv_metaInformation_5_0, 
        		"MetaInformation");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMetaInformationContainerAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaInformationContainerAccess().getMetaInformationMetaInformationParserRuleCall_3_3_1_0()); 
	    }
		lv_metaInformation_7_0=ruleMetaInformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaInformationContainerRule());
	        }
       		add(
       			$current, 
       			"metaInformation",
        		lv_metaInformation_7_0, 
        		"MetaInformation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMetaInformationContainerAccess().getRightCurlyBracketKeyword_3_4());
    }
)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMetaInformationContainerAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMetaInformation
entryRuleMetaInformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaInformationRule()); }
	 iv_ruleMetaInformation=ruleMetaInformation 
	 { $current=$iv_ruleMetaInformation.current; } 
	 EOF 
;

// Rule MetaInformation
ruleMetaInformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMetaInformationAccess().getMetaInformationAction_0(),
            $current);
    }
)	otherlv_1='MetaInformation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMetaInformationAccess().getMetaInformationKeyword_1());
    }
)
;





// Entry rule entryRuleBusinessProcedure
entryRuleBusinessProcedure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBusinessProcedureRule()); }
	 iv_ruleBusinessProcedure=ruleBusinessProcedure 
	 { $current=$iv_ruleBusinessProcedure.current; } 
	 EOF 
;

// Rule BusinessProcedure
ruleBusinessProcedure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBusinessProcedureAccess().getBusinessProcedureAction_0(),
            $current);
    }
)	otherlv_1='BusinessProcedure' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBusinessProcedureAccess().getBusinessProcedureKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessProcedureRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBusinessProcedureAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBusinessProcedureAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessProcedureRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='executable' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBusinessProcedureAccess().getExecutableKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getExecutableEStringParserRuleCall_5_1_0()); 
	    }
		lv_executable_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessProcedureRule());
	        }
       		set(
       			$current, 
       			"executable",
        		lv_executable_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='join' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBusinessProcedureAccess().getJoinKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getJoinJoinTypeEnumRuleCall_6_1_0()); 
	    }
		lv_join_9_0=ruleJoinType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessProcedureRule());
	        }
       		set(
       			$current, 
       			"join",
        		lv_join_9_0, 
        		"JoinType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='split' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBusinessProcedureAccess().getSplitKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getSplitSplitTypeEnumRuleCall_7_1_0()); 
	    }
		lv_split_11_0=ruleSplitType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessProcedureRule());
	        }
       		set(
       			$current, 
       			"split",
        		lv_split_11_0, 
        		"SplitType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='capacity' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBusinessProcedureAccess().getCapacityKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getCapacityEIntParserRuleCall_8_1_0()); 
	    }
		lv_capacity_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessProcedureRule());
	        }
       		set(
       			$current, 
       			"capacity",
        		lv_capacity_13_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='inputLinks' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBusinessProcedureAccess().getInputLinksKeyword_9_0());
    }
	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBusinessProcedureAccess().getLeftParenthesisKeyword_9_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBusinessProcedureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getInputLinksLinkCrossReference_9_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getBusinessProcedureAccess().getCommaKeyword_9_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBusinessProcedureRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getInputLinksLinkCrossReference_9_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19=')' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getBusinessProcedureAccess().getRightParenthesisKeyword_9_4());
    }
)?(	otherlv_20='outputLinks' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getBusinessProcedureAccess().getOutputLinksKeyword_10_0());
    }
	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getBusinessProcedureAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getOutputLinksLinkParserRuleCall_10_2_0()); 
	    }
		lv_outputLinks_22_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessProcedureRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_22_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getBusinessProcedureAccess().getCommaKeyword_10_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessProcedureAccess().getOutputLinksLinkParserRuleCall_10_3_1_0()); 
	    }
		lv_outputLinks_24_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessProcedureRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_24_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getBusinessProcedureAccess().getRightCurlyBracketKeyword_10_4());
    }
)?	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getBusinessProcedureAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getElementAccess().getElement_ImplParserRuleCall_0()); 
    }
    this_Element_Impl_0=ruleElement_Impl
    { 
        $current = $this_Element_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getInputConditionParserRuleCall_1()); 
    }
    this_InputCondition_1=ruleInputCondition
    { 
        $current = $this_InputCondition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getOutputConditionParserRuleCall_2()); 
    }
    this_OutputCondition_2=ruleOutputCondition
    { 
        $current = $this_OutputCondition_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getCondition_ImplParserRuleCall_3()); 
    }
    this_Condition_Impl_3=ruleCondition_Impl
    { 
        $current = $this_Condition_Impl_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getProcedure_ImplParserRuleCall_4()); 
    }
    this_Procedure_Impl_4=ruleProcedure_Impl
    { 
        $current = $this_Procedure_Impl_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getForEachLoopParserRuleCall_5()); 
    }
    this_ForEachLoop_5=ruleForEachLoop
    { 
        $current = $this_ForEachLoop_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getWhileLoopParserRuleCall_6()); 
    }
    this_WhileLoop_6=ruleWhileLoop
    { 
        $current = $this_WhileLoop_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getHandlerParserRuleCall_7()); 
    }
    this_Handler_7=ruleHandler
    { 
        $current = $this_Handler_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getPipelineParserRuleCall_8()); 
    }
    this_Pipeline_8=rulePipeline
    { 
        $current = $this_Pipeline_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getBusinessProcedureParserRuleCall_9()); 
    }
    this_BusinessProcedure_9=ruleBusinessProcedure
    { 
        $current = $this_BusinessProcedure_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProcedure
entryRuleProcedure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcedureRule()); }
	 iv_ruleProcedure=ruleProcedure 
	 { $current=$iv_ruleProcedure.current; } 
	 EOF 
;

// Rule Procedure
ruleProcedure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getProcedureAccess().getProcedure_ImplParserRuleCall_0()); 
    }
    this_Procedure_Impl_0=ruleProcedure_Impl
    { 
        $current = $this_Procedure_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProcedureAccess().getForEachLoopParserRuleCall_1()); 
    }
    this_ForEachLoop_1=ruleForEachLoop
    { 
        $current = $this_ForEachLoop_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProcedureAccess().getWhileLoopParserRuleCall_2()); 
    }
    this_WhileLoop_2=ruleWhileLoop
    { 
        $current = $this_WhileLoop_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProcedureAccess().getHandlerParserRuleCall_3()); 
    }
    this_Handler_3=ruleHandler
    { 
        $current = $this_Handler_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProcedureAccess().getPipelineParserRuleCall_4()); 
    }
    this_Pipeline_4=rulePipeline
    { 
        $current = $this_Pipeline_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getProcedureAccess().getBusinessProcedureParserRuleCall_5()); 
    }
    this_BusinessProcedure_5=ruleBusinessProcedure
    { 
        $current = $this_BusinessProcedure_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	 iv_ruleLink=ruleLink 
	 { $current=$iv_ruleLink.current; } 
	 EOF 
;

// Rule Link
ruleLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Link' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinkAccess().getDescriptionKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getDescriptionEStringParserRuleCall_3_1_0()); 
	    }
		lv_description_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='predicate' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLinkAccess().getPredicateKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getPredicatePredicateCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7='destination' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLinkAccess().getDestinationKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getDestinationElementCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	 iv_rulePredicate=rulePredicate 
	 { $current=$iv_rulePredicate.current; } 
	 EOF 
;

// Rule Predicate
rulePredicate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPredicateAccess().getPredicateAction_0(),
            $current);
    }
)	otherlv_1='Predicate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPredicateAccess().getPredicateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPredicateAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPredicateAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPredicateAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleElement_Impl
entryRuleElement_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElement_ImplRule()); }
	 iv_ruleElement_Impl=ruleElement_Impl 
	 { $current=$iv_ruleElement_Impl.current; } 
	 EOF 
;

// Rule Element_Impl
ruleElement_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getElement_ImplAccess().getElementAction_0(),
            $current);
    }
)	otherlv_1='Element' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElement_ImplAccess().getElementKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElement_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getElement_ImplAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement_ImplAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement_ImplRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='inputLinks' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getElement_ImplAccess().getInputLinksKeyword_5_0());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getElement_ImplAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getElement_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getElement_ImplAccess().getInputLinksLinkCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getElement_ImplAccess().getCommaKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getElement_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getElement_ImplAccess().getInputLinksLinkCrossReference_5_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getElement_ImplAccess().getRightParenthesisKeyword_5_4());
    }
)?(	otherlv_12='outputLinks' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getElement_ImplAccess().getOutputLinksKeyword_6_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getElement_ImplAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement_ImplAccess().getOutputLinksLinkParserRuleCall_6_2_0()); 
	    }
		lv_outputLinks_14_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement_ImplRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_14_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getElement_ImplAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElement_ImplAccess().getOutputLinksLinkParserRuleCall_6_3_1_0()); 
	    }
		lv_outputLinks_16_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElement_ImplRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_16_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getElement_ImplAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getElement_ImplAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleInputCondition
entryRuleInputCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputConditionRule()); }
	 iv_ruleInputCondition=ruleInputCondition 
	 { $current=$iv_ruleInputCondition.current; } 
	 EOF 
;

// Rule InputCondition
ruleInputCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputConditionAccess().getInputConditionAction_0(),
            $current);
    }
)	otherlv_1='InputCondition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputConditionAccess().getInputConditionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputConditionAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputConditionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInputConditionAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInputConditionAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputConditionAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputConditionRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='inputLinks' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInputConditionAccess().getInputLinksKeyword_5_0());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInputConditionAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputConditionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInputConditionAccess().getInputLinksLinkCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInputConditionAccess().getCommaKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputConditionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInputConditionAccess().getInputLinksLinkCrossReference_5_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInputConditionAccess().getRightParenthesisKeyword_5_4());
    }
)?(	otherlv_12='outputLinks' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInputConditionAccess().getOutputLinksKeyword_6_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInputConditionAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputConditionAccess().getOutputLinksLinkParserRuleCall_6_2_0()); 
	    }
		lv_outputLinks_14_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputConditionRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_14_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInputConditionAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputConditionAccess().getOutputLinksLinkParserRuleCall_6_3_1_0()); 
	    }
		lv_outputLinks_16_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputConditionRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_16_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInputConditionAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getInputConditionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOutputCondition
entryRuleOutputCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputConditionRule()); }
	 iv_ruleOutputCondition=ruleOutputCondition 
	 { $current=$iv_ruleOutputCondition.current; } 
	 EOF 
;

// Rule OutputCondition
ruleOutputCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOutputConditionAccess().getOutputConditionAction_0(),
            $current);
    }
)	otherlv_1='OutputCondition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutputConditionAccess().getOutputConditionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputConditionAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputConditionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOutputConditionAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOutputConditionAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputConditionAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputConditionRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='inputLinks' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOutputConditionAccess().getInputLinksKeyword_5_0());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOutputConditionAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputConditionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOutputConditionAccess().getInputLinksLinkCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOutputConditionAccess().getCommaKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputConditionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOutputConditionAccess().getInputLinksLinkCrossReference_5_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOutputConditionAccess().getRightParenthesisKeyword_5_4());
    }
)?(	otherlv_12='outputLinks' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getOutputConditionAccess().getOutputLinksKeyword_6_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getOutputConditionAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputConditionAccess().getOutputLinksLinkParserRuleCall_6_2_0()); 
	    }
		lv_outputLinks_14_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputConditionRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_14_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOutputConditionAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputConditionAccess().getOutputLinksLinkParserRuleCall_6_3_1_0()); 
	    }
		lv_outputLinks_16_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputConditionRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_16_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getOutputConditionAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getOutputConditionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleCondition_Impl
entryRuleCondition_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCondition_ImplRule()); }
	 iv_ruleCondition_Impl=ruleCondition_Impl 
	 { $current=$iv_ruleCondition_Impl.current; } 
	 EOF 
;

// Rule Condition_Impl
ruleCondition_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCondition_ImplAccess().getConditionAction_0(),
            $current);
    }
)	otherlv_1='Condition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCondition_ImplAccess().getConditionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCondition_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondition_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCondition_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCondition_ImplAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCondition_ImplAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondition_ImplRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='inputLinks' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCondition_ImplAccess().getInputLinksKeyword_5_0());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCondition_ImplAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCondition_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCondition_ImplAccess().getInputLinksLinkCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCondition_ImplAccess().getCommaKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCondition_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCondition_ImplAccess().getInputLinksLinkCrossReference_5_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCondition_ImplAccess().getRightParenthesisKeyword_5_4());
    }
)?(	otherlv_12='outputLinks' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCondition_ImplAccess().getOutputLinksKeyword_6_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCondition_ImplAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCondition_ImplAccess().getOutputLinksLinkParserRuleCall_6_2_0()); 
	    }
		lv_outputLinks_14_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondition_ImplRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_14_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCondition_ImplAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCondition_ImplAccess().getOutputLinksLinkParserRuleCall_6_3_1_0()); 
	    }
		lv_outputLinks_16_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondition_ImplRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_16_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCondition_ImplAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCondition_ImplAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleProcedure_Impl
entryRuleProcedure_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcedure_ImplRule()); }
	 iv_ruleProcedure_Impl=ruleProcedure_Impl 
	 { $current=$iv_ruleProcedure_Impl.current; } 
	 EOF 
;

// Rule Procedure_Impl
ruleProcedure_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProcedure_ImplAccess().getProcedureAction_0(),
            $current);
    }
)	otherlv_1='Procedure' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProcedure_ImplAccess().getProcedureKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedure_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProcedure_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcedure_ImplAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedure_ImplRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='executable' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcedure_ImplAccess().getExecutableKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getExecutableEStringParserRuleCall_5_1_0()); 
	    }
		lv_executable_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedure_ImplRule());
	        }
       		set(
       			$current, 
       			"executable",
        		lv_executable_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='join' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProcedure_ImplAccess().getJoinKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getJoinJoinTypeEnumRuleCall_6_1_0()); 
	    }
		lv_join_9_0=ruleJoinType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedure_ImplRule());
	        }
       		set(
       			$current, 
       			"join",
        		lv_join_9_0, 
        		"JoinType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='split' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getProcedure_ImplAccess().getSplitKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getSplitSplitTypeEnumRuleCall_7_1_0()); 
	    }
		lv_split_11_0=ruleSplitType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedure_ImplRule());
	        }
       		set(
       			$current, 
       			"split",
        		lv_split_11_0, 
        		"SplitType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='capacity' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getProcedure_ImplAccess().getCapacityKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getCapacityEIntParserRuleCall_8_1_0()); 
	    }
		lv_capacity_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedure_ImplRule());
	        }
       		set(
       			$current, 
       			"capacity",
        		lv_capacity_13_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='inputLinks' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getProcedure_ImplAccess().getInputLinksKeyword_9_0());
    }
	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getProcedure_ImplAccess().getLeftParenthesisKeyword_9_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedure_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getInputLinksLinkCrossReference_9_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getProcedure_ImplAccess().getCommaKeyword_9_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedure_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getInputLinksLinkCrossReference_9_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19=')' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getProcedure_ImplAccess().getRightParenthesisKeyword_9_4());
    }
)?(	otherlv_20='outputLinks' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getProcedure_ImplAccess().getOutputLinksKeyword_10_0());
    }
	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getProcedure_ImplAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getOutputLinksLinkParserRuleCall_10_2_0()); 
	    }
		lv_outputLinks_22_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedure_ImplRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_22_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getProcedure_ImplAccess().getCommaKeyword_10_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedure_ImplAccess().getOutputLinksLinkParserRuleCall_10_3_1_0()); 
	    }
		lv_outputLinks_24_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedure_ImplRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_24_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getProcedure_ImplAccess().getRightCurlyBracketKeyword_10_4());
    }
)?	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getProcedure_ImplAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleForEachLoop
entryRuleForEachLoop returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForEachLoopRule()); }
	 iv_ruleForEachLoop=ruleForEachLoop 
	 { $current=$iv_ruleForEachLoop.current; } 
	 EOF 
;

// Rule ForEachLoop
ruleForEachLoop returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ForEachLoop' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForEachLoopAccess().getForEachLoopKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForEachLoopRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForEachLoopAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getForEachLoopAccess().getDescriptionKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getDescriptionEStringParserRuleCall_3_1_0()); 
	    }
		lv_description_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForEachLoopRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='executable' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getForEachLoopAccess().getExecutableKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getExecutableEStringParserRuleCall_4_1_0()); 
	    }
		lv_executable_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForEachLoopRule());
	        }
       		set(
       			$current, 
       			"executable",
        		lv_executable_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='join' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getForEachLoopAccess().getJoinKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getJoinJoinTypeEnumRuleCall_5_1_0()); 
	    }
		lv_join_8_0=ruleJoinType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForEachLoopRule());
	        }
       		set(
       			$current, 
       			"join",
        		lv_join_8_0, 
        		"JoinType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='split' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getForEachLoopAccess().getSplitKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getSplitSplitTypeEnumRuleCall_6_1_0()); 
	    }
		lv_split_10_0=ruleSplitType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForEachLoopRule());
	        }
       		set(
       			$current, 
       			"split",
        		lv_split_10_0, 
        		"SplitType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='capacity' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getForEachLoopAccess().getCapacityKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getCapacityEIntParserRuleCall_7_1_0()); 
	    }
		lv_capacity_12_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForEachLoopRule());
	        }
       		set(
       			$current, 
       			"capacity",
        		lv_capacity_12_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='inputLinks' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getForEachLoopAccess().getInputLinksKeyword_8_0());
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getForEachLoopAccess().getLeftParenthesisKeyword_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getForEachLoopRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getInputLinksLinkCrossReference_8_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getForEachLoopAccess().getCommaKeyword_8_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getForEachLoopRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getInputLinksLinkCrossReference_8_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getForEachLoopAccess().getRightParenthesisKeyword_8_4());
    }
)?	otherlv_19='iterable' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getForEachLoopAccess().getIterableKeyword_9());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getForEachLoopRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getIterableDataCrossReference_10_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21='outputLinks' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getForEachLoopAccess().getOutputLinksKeyword_11_0());
    }
	otherlv_22='{' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getForEachLoopAccess().getLeftCurlyBracketKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getOutputLinksLinkParserRuleCall_11_2_0()); 
	    }
		lv_outputLinks_23_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForEachLoopRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_23_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getForEachLoopAccess().getCommaKeyword_11_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForEachLoopAccess().getOutputLinksLinkParserRuleCall_11_3_1_0()); 
	    }
		lv_outputLinks_25_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForEachLoopRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_25_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getForEachLoopAccess().getRightCurlyBracketKeyword_11_4());
    }
)?	otherlv_27='}' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getForEachLoopAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleWhileLoop
entryRuleWhileLoop returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhileLoopRule()); }
	 iv_ruleWhileLoop=ruleWhileLoop 
	 { $current=$iv_ruleWhileLoop.current; } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='WhileLoop' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileLoopKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhileLoopAccess().getDescriptionKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getDescriptionEStringParserRuleCall_3_1_0()); 
	    }
		lv_description_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='executable' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWhileLoopAccess().getExecutableKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getExecutableEStringParserRuleCall_4_1_0()); 
	    }
		lv_executable_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		set(
       			$current, 
       			"executable",
        		lv_executable_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='join' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getWhileLoopAccess().getJoinKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getJoinJoinTypeEnumRuleCall_5_1_0()); 
	    }
		lv_join_8_0=ruleJoinType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		set(
       			$current, 
       			"join",
        		lv_join_8_0, 
        		"JoinType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='split' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getWhileLoopAccess().getSplitKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getSplitSplitTypeEnumRuleCall_6_1_0()); 
	    }
		lv_split_10_0=ruleSplitType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		set(
       			$current, 
       			"split",
        		lv_split_10_0, 
        		"SplitType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='capacity' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getWhileLoopAccess().getCapacityKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getCapacityEIntParserRuleCall_7_1_0()); 
	    }
		lv_capacity_12_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		set(
       			$current, 
       			"capacity",
        		lv_capacity_12_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='inputLinks' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getWhileLoopAccess().getInputLinksKeyword_8_0());
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhileLoopRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getInputLinksLinkCrossReference_8_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getWhileLoopAccess().getCommaKeyword_8_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhileLoopRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getInputLinksLinkCrossReference_8_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_8_4());
    }
)?	otherlv_19='predicate' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getWhileLoopAccess().getPredicateKeyword_9());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhileLoopRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getPredicatePredicateCrossReference_10_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21='outputLinks' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getWhileLoopAccess().getOutputLinksKeyword_11_0());
    }
	otherlv_22='{' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getOutputLinksLinkParserRuleCall_11_2_0()); 
	    }
		lv_outputLinks_23_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_23_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getWhileLoopAccess().getCommaKeyword_11_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getOutputLinksLinkParserRuleCall_11_3_1_0()); 
	    }
		lv_outputLinks_25_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_25_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_11_4());
    }
)?	otherlv_27='}' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleHandler
entryRuleHandler returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHandlerRule()); }
	 iv_ruleHandler=ruleHandler 
	 { $current=$iv_ruleHandler.current; } 
	 EOF 
;

// Rule Handler
ruleHandler returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHandlerAccess().getHandlerAction_0(),
            $current);
    }
)	otherlv_1='Handler' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHandlerAccess().getHandlerKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHandlerRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHandlerAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHandlerAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHandlerRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='executable' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHandlerAccess().getExecutableKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getExecutableEStringParserRuleCall_5_1_0()); 
	    }
		lv_executable_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHandlerRule());
	        }
       		set(
       			$current, 
       			"executable",
        		lv_executable_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='join' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getHandlerAccess().getJoinKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getJoinJoinTypeEnumRuleCall_6_1_0()); 
	    }
		lv_join_9_0=ruleJoinType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHandlerRule());
	        }
       		set(
       			$current, 
       			"join",
        		lv_join_9_0, 
        		"JoinType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='split' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getHandlerAccess().getSplitKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getSplitSplitTypeEnumRuleCall_7_1_0()); 
	    }
		lv_split_11_0=ruleSplitType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHandlerRule());
	        }
       		set(
       			$current, 
       			"split",
        		lv_split_11_0, 
        		"SplitType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='capacity' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getHandlerAccess().getCapacityKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getCapacityEIntParserRuleCall_8_1_0()); 
	    }
		lv_capacity_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHandlerRule());
	        }
       		set(
       			$current, 
       			"capacity",
        		lv_capacity_13_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='inputLinks' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getHandlerAccess().getInputLinksKeyword_9_0());
    }
	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getHandlerAccess().getLeftParenthesisKeyword_9_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getHandlerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getInputLinksLinkCrossReference_9_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getHandlerAccess().getCommaKeyword_9_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getHandlerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getInputLinksLinkCrossReference_9_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19=')' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getHandlerAccess().getRightParenthesisKeyword_9_4());
    }
)?(	otherlv_20='procedures' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getHandlerAccess().getProceduresKeyword_10_0());
    }
	otherlv_21='(' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getHandlerAccess().getLeftParenthesisKeyword_10_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getHandlerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getProceduresProcedureCrossReference_10_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getHandlerAccess().getCommaKeyword_10_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getHandlerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getProceduresProcedureCrossReference_10_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_25=')' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getHandlerAccess().getRightParenthesisKeyword_10_4());
    }
)?(	otherlv_26='outputLinks' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getHandlerAccess().getOutputLinksKeyword_11_0());
    }
	otherlv_27='{' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getHandlerAccess().getLeftCurlyBracketKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getOutputLinksLinkParserRuleCall_11_2_0()); 
	    }
		lv_outputLinks_28_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHandlerRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_28_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_29=',' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getHandlerAccess().getCommaKeyword_11_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHandlerAccess().getOutputLinksLinkParserRuleCall_11_3_1_0()); 
	    }
		lv_outputLinks_30_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHandlerRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_30_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_31='}' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getHandlerAccess().getRightCurlyBracketKeyword_11_4());
    }
)?	otherlv_32='}' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getHandlerAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRulePipeline
entryRulePipeline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPipelineRule()); }
	 iv_rulePipeline=rulePipeline 
	 { $current=$iv_rulePipeline.current; } 
	 EOF 
;

// Rule Pipeline
rulePipeline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Pipeline' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPipelineAccess().getPipelineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPipelineAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPipelineAccess().getDescriptionKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getDescriptionEStringParserRuleCall_3_1_0()); 
	    }
		lv_description_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='executable' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPipelineAccess().getExecutableKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getExecutableEStringParserRuleCall_4_1_0()); 
	    }
		lv_executable_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		set(
       			$current, 
       			"executable",
        		lv_executable_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='join' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPipelineAccess().getJoinKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getJoinJoinTypeEnumRuleCall_5_1_0()); 
	    }
		lv_join_8_0=ruleJoinType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		set(
       			$current, 
       			"join",
        		lv_join_8_0, 
        		"JoinType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='split' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPipelineAccess().getSplitKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getSplitSplitTypeEnumRuleCall_6_1_0()); 
	    }
		lv_split_10_0=ruleSplitType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		set(
       			$current, 
       			"split",
        		lv_split_10_0, 
        		"SplitType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='capacity' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPipelineAccess().getCapacityKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getCapacityEIntParserRuleCall_7_1_0()); 
	    }
		lv_capacity_12_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		set(
       			$current, 
       			"capacity",
        		lv_capacity_12_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='inputLinks' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPipelineAccess().getInputLinksKeyword_8_0());
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getPipelineAccess().getLeftParenthesisKeyword_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPipelineRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getInputLinksLinkCrossReference_8_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getPipelineAccess().getCommaKeyword_8_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPipelineRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getInputLinksLinkCrossReference_8_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getPipelineAccess().getRightParenthesisKeyword_8_4());
    }
)?	otherlv_19='iterable' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getPipelineAccess().getIterableKeyword_9());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPipelineRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getIterableDataCrossReference_10_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21='outputLinks' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getPipelineAccess().getOutputLinksKeyword_11_0());
    }
	otherlv_22='{' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getPipelineAccess().getLeftCurlyBracketKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getOutputLinksLinkParserRuleCall_11_2_0()); 
	    }
		lv_outputLinks_23_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_23_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getPipelineAccess().getCommaKeyword_11_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getOutputLinksLinkParserRuleCall_11_3_1_0()); 
	    }
		lv_outputLinks_25_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		add(
       			$current, 
       			"outputLinks",
        		lv_outputLinks_25_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getPipelineAccess().getRightCurlyBracketKeyword_11_4());
    }
)?(	otherlv_27='procedures' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getPipelineAccess().getProceduresKeyword_12_0());
    }
	otherlv_28='{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getPipelineAccess().getLeftCurlyBracketKeyword_12_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getProceduresProcedureParserRuleCall_12_2_0()); 
	    }
		lv_procedures_29_0=ruleProcedure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		add(
       			$current, 
       			"procedures",
        		lv_procedures_29_0, 
        		"Procedure");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_30=',' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getPipelineAccess().getCommaKeyword_12_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPipelineAccess().getProceduresProcedureParserRuleCall_12_3_1_0()); 
	    }
		lv_procedures_31_0=ruleProcedure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPipelineRule());
	        }
       		add(
       			$current, 
       			"procedures",
        		lv_procedures_31_0, 
        		"Procedure");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_32='}' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getPipelineAccess().getRightCurlyBracketKeyword_12_4());
    }
)?	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getPipelineAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleData
entryRuleData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataRule()); }
	 iv_ruleData=ruleData 
	 { $current=$iv_ruleData.current; } 
	 EOF 
;

// Rule Data
ruleData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataAccess().getDataAction_0(),
            $current);
    }
)	otherlv_1='Data' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataAccess().getDataKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccess().getDescriptionEStringParserRuleCall_4_1_0()); 
	    }
		lv_description_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='type' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataAccess().getTypeKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccess().getTypeEStringParserRuleCall_5_1_0()); 
	    }
		lv_type_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Rule JoinType
ruleJoinType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='AND' 
	{
        $current = grammarAccess.getJoinTypeAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getJoinTypeAccess().getANDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='OR' 
	{
        $current = grammarAccess.getJoinTypeAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getJoinTypeAccess().getOREnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='XOR' 
	{
        $current = grammarAccess.getJoinTypeAccess().getXOREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getJoinTypeAccess().getXOREnumLiteralDeclaration_2()); 
    }
));



// Rule SplitType
ruleSplitType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='AND' 
	{
        $current = grammarAccess.getSplitTypeAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSplitTypeAccess().getANDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='OR' 
	{
        $current = grammarAccess.getSplitTypeAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSplitTypeAccess().getOREnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='XOR' 
	{
        $current = grammarAccess.getSplitTypeAccess().getXOREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSplitTypeAccess().getXOREnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


